<<<<<<< HEAD
{"version":3,"file":"main.js","mappings":"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","sources":["webpack://roots/./apps/roots-api/src/app/app.controller.ts","webpack://roots/./apps/roots-api/src/app/app.module.ts","webpack://roots/./apps/roots-api/src/app/app.service.ts","webpack://roots/./apps/roots-api/src/app/auth/auth.controller.ts","webpack://roots/./apps/roots-api/src/app/auth/auth.module.ts","webpack://roots/./apps/roots-api/src/app/auth/auth.service.ts","webpack://roots/./apps/roots-api/src/app/auth/constants.ts","webpack://roots/./apps/roots-api/src/app/auth/jwt-auth.guard.ts","webpack://roots/./apps/roots-api/src/app/auth/jwt.strategy.ts","webpack://roots/./apps/roots-api/src/app/auth/local.strategy.ts","webpack://roots/./apps/roots-api/src/app/event/event.controller.ts","webpack://roots/./apps/roots-api/src/app/event/event.dto.ts","webpack://roots/./apps/roots-api/src/app/event/event.module.ts","webpack://roots/./apps/roots-api/src/app/event/event.schema.ts","webpack://roots/./apps/roots-api/src/app/event/event.service.ts","webpack://roots/./apps/roots-api/src/app/log/log.controller.ts","webpack://roots/./apps/roots-api/src/app/log/log.dto.ts","webpack://roots/./apps/roots-api/src/app/log/log.module.ts","webpack://roots/./apps/roots-api/src/app/log/log.schema.ts","webpack://roots/./apps/roots-api/src/app/log/log.service.ts","webpack://roots/./apps/roots-api/src/app/organization/organization.controller.ts","webpack://roots/./apps/roots-api/src/app/organization/organization.dto.ts","webpack://roots/./apps/roots-api/src/app/organization/organization.module.ts","webpack://roots/./apps/roots-api/src/app/organization/organization.schema.ts","webpack://roots/./apps/roots-api/src/app/organization/organization.service.ts","webpack://roots/./apps/roots-api/src/app/providers/email/email.module.ts","webpack://roots/./apps/roots-api/src/app/providers/email/email.service.ts","webpack://roots/./apps/roots-api/src/app/shared/filters/validation.exception.ts","webpack://roots/./apps/roots-api/src/app/shared/filters/validation.filter.ts","webpack://roots/./apps/roots-api/src/app/shared/pipes/ParseObjectIdPipe.ts","webpack://roots/./apps/roots-api/src/app/tag/tag.controller.ts","webpack://roots/./apps/roots-api/src/app/tag/tag.dto.ts","webpack://roots/./apps/roots-api/src/app/tag/tag.module.ts","webpack://roots/./apps/roots-api/src/app/tag/tag.schema.ts","webpack://roots/./apps/roots-api/src/app/tag/tag.service.ts","webpack://roots/./apps/roots-api/src/app/token/token.module.ts","webpack://roots/./apps/roots-api/src/app/token/token.schema.ts","webpack://roots/./apps/roots-api/src/app/token/token.service.ts","webpack://roots/./apps/roots-api/src/app/user/user.controller.ts","webpack://roots/./apps/roots-api/src/app/user/user.dto.ts","webpack://roots/./apps/roots-api/src/app/user/user.module.ts","webpack://roots/./apps/roots-api/src/app/user/user.schema.ts","webpack://roots/./apps/roots-api/src/app/user/user.service.ts","webpack://roots/./apps/roots-api/src/environments/environment.ts","webpack://roots/./libs/data/src/index.ts","webpack://roots/./libs/data/src/lib/data.ts","webpack://roots/external commonjs \"@nestjs-modules/mailer\"","webpack://roots/external commonjs \"@nestjs/common\"","webpack://roots/external commonjs \"@nestjs/core\"","webpack://roots/external commonjs \"@nestjs/jwt\"","webpack://roots/external commonjs \"@nestjs/mongoose\"","webpack://roots/external commonjs \"@nestjs/passport\"","webpack://roots/external commonjs \"bcryptjs\"","webpack://roots/external commonjs \"class-validator\"","webpack://roots/external commonjs \"express\"","webpack://roots/external commonjs \"mongodb\"","webpack://roots/external commonjs \"mongoose\"","webpack://roots/external commonjs \"passport-jwt\"","webpack://roots/external commonjs \"passport-local\"","webpack://roots/external commonjs \"tslib\"","webpack://roots/webpack/bootstrap","webpack://roots/./apps/roots-api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  // Get API welcome message\r\n  @Get()\r\n  getData() {\r\n    return this.appService.getData();\r\n  }\r\n}\r\n","import { MailerModule } from '@nestjs-modules/mailer';\r\nimport { Module } from '@nestjs/common';\r\nimport { APP_GUARD } from '@nestjs/core';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { environment } from '../environments/environment';\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\r\nimport { EventModule } from './event/event.module';\r\nimport { LogModule } from './log/log.module';\r\nimport { OrganizationModule } from './organization/organization.module';\r\nimport { TagModule } from './tag/tag.module';\r\nimport { UserModule } from './user/user.module';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forRoot(environment.API_URL),\r\n    UserModule,\r\n    OrganizationModule,\r\n    EventModule,\r\n    AuthModule,\r\n    TagModule,\r\n    LogModule,\r\n    MailerModule.forRoot({\r\n      transport: {\r\n        host: 'smtp.sendgrid.net',\r\n        auth: {\r\n          user: 'apikey',\r\n          pass: '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',\r\n        },\r\n        tls: {\r\n          rejectUnauthorized: false,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [\r\n    {\r\n      provide: APP_GUARD,\r\n      useClass: JwtAuthGuard,\r\n    },\r\n    AppService,\r\n  ],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  // Get API welcome message\r\n  getData(): { message: string } {\r\n    return { message: 'Welkom bij de API van Roots!' };\r\n  }\r\n}\r\n","import { Body, Controller, Post, Request, UseGuards } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { UserDto } from '../user/user.dto';\r\nimport { Public } from './auth.module';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Controller()\r\nexport class AuthController {\r\n  // Inject all dependencies\r\n  constructor(private readonly authService: AuthService) {}\r\n\r\n  // Login user\r\n  @Public()\r\n  @UseGuards(AuthGuard('local'))\r\n  @Post('auth/login')\r\n  async login(@Request() req) {\r\n    return this.authService.login(req.body);\r\n  }\r\n\r\n  // Register user/organization\r\n  @Public()\r\n  @Post('auth/register')\r\n  async register(@Body() UserDto: UserDto) {\r\n    return this.authService.register(UserDto);\r\n  }\r\n\r\n  // Verify user\r\n  @Public()\r\n  @Post('auth/verify')\r\n  async verify(@Body() body) {\r\n    return this.authService.verify(body);\r\n  }\r\n\r\n  // Resend verification mail\r\n  @Public()\r\n  @Post('auth/resend')\r\n  async resend(@Body() body) {\r\n    return this.authService.resendVerificationMail(body.emailAddress);\r\n  }\r\n\r\n  // Send reset password mail\r\n  @Public()\r\n  @Post('auth/forgot_password')\r\n  async forgotPassword(@Body() body) {\r\n    return this.authService.forgotPasswordMail(body.emailAddress);\r\n  }\r\n\r\n  // Reset password\r\n  @Public()\r\n  @Post('auth/reset_password')\r\n  async resetPassword(@Body() body) {\r\n    return this.authService.resetPassword(body.tokenId, body.password);\r\n  }\r\n}\r\n","export const IS_PUBLIC_KEY = 'isPublic';\r\nexport const Public = () => SetMetadata(IS_PUBLIC_KEY, true);\r\n\r\nimport { Module, SetMetadata } from '@nestjs/common';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { MailModule } from '../providers/email/email.module';\r\nimport { TokenModule } from '../token/token.module';\r\nimport { UserModule } from '../user/user.module';\r\nimport { AuthController } from './auth.controller';\r\nimport { AuthService } from './auth.service';\r\nimport { jwtConstants } from './constants';\r\nimport { JwtStrategy } from './jwt.strategy';\r\nimport { LocalStrategy } from './local.strategy';\r\n\r\n@Module({\r\n  imports: [\r\n    UserModule,\r\n    PassportModule,\r\n    JwtModule.register({\r\n      secret: jwtConstants.secret,\r\n      signOptions: { expiresIn: '2d' },\r\n    }),\r\n    MailModule,\r\n    TokenModule,\r\n  ],\r\n  providers: [AuthService, LocalStrategy, JwtStrategy],\r\n  exports: [AuthService],\r\n  controllers: [AuthController],\r\n})\r\nexport class AuthModule {}\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport { MailService } from '../providers/email/email.service';\r\nimport { ParseObjectIdPipe } from '../shared/pipes/ParseObjectIdPipe';\r\nimport { Token } from '../token/token.schema';\r\nimport { TokenService } from '../token/token.service';\r\nimport { UserDto } from '../user/user.dto';\r\nimport { User } from '../user/user.schema';\r\nimport { UserService } from '../user/user.service';\r\nimport { jwtConstants } from './constants';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    private userService: UserService,\r\n    private jwtService: JwtService,\r\n    private mailService: MailService,\r\n    private tokenService: TokenService\r\n  ) {}\r\n\r\n  // Login user\r\n  async login(user: any) {\r\n    const payload = { username: user.username || user.emailAddress };\r\n\r\n    const loggedInUser = await this.userService.findByEmailAddress(\r\n      payload.username\r\n    );\r\n\r\n    return {\r\n      _id: loggedInUser._id,\r\n      firstname: loggedInUser.firstname,\r\n      lastname: loggedInUser.lastname,\r\n      emailAddress: loggedInUser.emailAddress,\r\n      isVerified: loggedInUser.isVerified,\r\n      organization: loggedInUser.organization,\r\n      access_token: this.jwtService.sign(payload, jwtConstants),\r\n    };\r\n  }\r\n\r\n  // Register new user/organization + create token + send verify mail\r\n  async register(UserDto: UserDto) {\r\n    const user: User = await this.userService.create(UserDto);\r\n\r\n    const token: Token = await this.tokenService.create(\r\n      'verification',\r\n      user._id.toString()\r\n    );\r\n\r\n    await this.mailService.SendVerificationMail(\r\n      user.emailAddress,\r\n      user.firstname,\r\n      token.verificationCode\r\n    );\r\n\r\n    return user;\r\n  }\r\n\r\n  // Check if user is active\r\n  async validateUser(username: string, pass: string): Promise<any> {\r\n    const user: User = await this.userService.findByEmailAddress(username);\r\n    if (user && (await bcrypt.compareSync(pass, user.password))) {\r\n      if (user.isActive === false) {\r\n        throw new HttpException(\r\n          `Jouw account is gedeactiveerd!`,\r\n          HttpStatus.BAD_REQUEST\r\n        );\r\n      }\r\n\r\n      if (user.isVerified) {\r\n        await this.userService.setLastLoginTimeStamp(user._id.toString());\r\n      }\r\n      return user;\r\n    }\r\n\r\n    throw new HttpException(\r\n      `Incorrecte inloggegevens!`,\r\n      HttpStatus.BAD_REQUEST\r\n    );\r\n  }\r\n\r\n  // Verify user\r\n  async verify(req: any) {\r\n    //check if object id is valid\r\n    if (!ParseObjectIdPipe.isValidObjectId(req.userId)) {\r\n      throw new HttpException('Id is niet geldig!', HttpStatus.BAD_REQUEST);\r\n    }\r\n\r\n    //check if user exists (validation is elsewhere)\r\n    const user = await this.userService.getById(req.userId);\r\n\r\n    //retrieve existing token\r\n    const token = await this.tokenService.getByUserId(\r\n      req.userId,\r\n      'verification'\r\n    );\r\n\r\n    //check if token is correct + not expired\r\n    if (\r\n      token.verificationCode === req.verificationCode &&\r\n      token.expirationDate > new Date()\r\n    ) {\r\n      //delete used token\r\n      await this.tokenService.delete(req.userId, 'verification');\r\n\r\n      //change isVerified to true\r\n      await this.userService.verifyAccount(req.userId);\r\n\r\n      //set first login timestamp\r\n      await this.userService.setLastLoginTimeStamp(req.userId);\r\n\r\n      //login automatically\r\n      return await this.login({\r\n        username: user.emailAddress,\r\n        password: user.password,\r\n      });\r\n    } else {\r\n      throw new HttpException(\r\n        'De verificatiecode is ongeldig!',\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n  }\r\n\r\n  // Resend verification mail\r\n  async resendVerificationMail(emailAddress: string) {\r\n    //retrieve user + check if exists\r\n    const user = await this.userService.findByEmailAddress(emailAddress);\r\n\r\n    //delete previous token\r\n    await this.tokenService.delete(user._id.toString(), 'verification');\r\n\r\n    //create new token\r\n    const token = await this.tokenService.create(\r\n      'verification',\r\n      user._id.toString()\r\n    );\r\n\r\n    //send email with new verificationcode\r\n    await this.mailService.SendVerificationMail(\r\n      user.emailAddress,\r\n      user.firstname,\r\n      token.verificationCode\r\n    );\r\n\r\n    return {\r\n      status: 200,\r\n      message: 'Verification Email has been sent!',\r\n    };\r\n  }\r\n\r\n  // Send forgot password mail\r\n  async forgotPasswordMail(emailAddress: string) {\r\n    //retrieve user + check if exists\r\n    const user = await this.userService.findByEmailAddress(emailAddress);\r\n\r\n    //delete previous tokens (if there are any)\r\n    await this.tokenService.delete(user._id.toString(), 'password_reset');\r\n\r\n    //create new token\r\n    const token = await this.tokenService.create(\r\n      'password_reset',\r\n      user._id.toString()\r\n    );\r\n\r\n    //send email with link for password reset\r\n    await this.mailService.SendPasswordResetMail(\r\n      user.emailAddress,\r\n      user.firstname,\r\n      token._id.toString()\r\n    );\r\n\r\n    return {\r\n      status: 200,\r\n      message: 'Reset Password Email has been sent!',\r\n    };\r\n  }\r\n\r\n  // Reset password\r\n  async resetPassword(tokenId: string, password: string) {\r\n    //retrieve user + check if exists\r\n    const token = await this.tokenService.getById(tokenId);\r\n\r\n    //delete previous tokens (if there are any)\r\n    await this.tokenService.delete(token.userId.toString(), 'password_reset');\r\n\r\n    if (token.expirationDate > new Date()) {\r\n      //reset password\r\n      await this.userService.setPassword(token.userId.toString(), password);\r\n\r\n      return {\r\n        status: 200,\r\n        message: 'Password has been reset!',\r\n      };\r\n    } else {\r\n      throw new HttpException('Token is ongeldig!', HttpStatus.BAD_REQUEST);\r\n    }\r\n  }\r\n}\r\n","export const jwtConstants = {\r\n  secret: 'secretKey',\r\n};\r\n","import { ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IS_PUBLIC_KEY } from './auth.module';\r\n\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard('jwt') {\r\n  constructor(private reflector: Reflector) {\r\n    super();\r\n  }\r\n\r\n  // Create Guard to check if user is authenticated\r\n  canActivate(context: ExecutionContext) {\r\n    const isPublic = this.reflector.getAllAndOverride<boolean>(IS_PUBLIC_KEY, [\r\n      context.getHandler(),\r\n      context.getClass(),\r\n    ]);\r\n    if (isPublic) {\r\n      return true;\r\n    }\r\n    return super.canActivate(context);\r\n  }\r\n}\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { UserService } from '../user/user.service';\r\nimport { jwtConstants } from './constants';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private readonly userService: UserService) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: jwtConstants.secret,\r\n    });\r\n  }\r\n\r\n  // Check if user JWT token is valid\r\n  async validate(payload: any) {\r\n    const user = await this.userService.findByEmailAddress(payload.username);\r\n\r\n    if (user) {\r\n      return user;\r\n    } else {\r\n      throw new HttpException('Login is verlopen!', HttpStatus.UNAUTHORIZED);\r\n    }\r\n  }\r\n}\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Strategy } from 'passport-local';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private authService: AuthService) {\r\n    super();\r\n  }\r\n\r\n  // Check if user exists\r\n  async validate(username: string, password: string): Promise<any> {\r\n    const user = await this.authService.validateUser(username, password);\r\n\r\n    if (!user) {\r\n      throw new HttpException(\r\n        `Er is geen gebruiker gevonden met het opgegeven e-mailadres!`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n    }\r\n\r\n    return user;\r\n  }\r\n}\r\n","import {\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  HttpException,\r\n  HttpStatus,\r\n  Logger,\r\n  Param,\r\n  Post,\r\n  Put,\r\n  Query,\r\n} from '@nestjs/common';\r\nimport { Public } from '../auth/auth.module';\r\nimport { EventDto } from './event.dto';\r\nimport { Event } from './event.schema';\r\nimport { EventService } from './event.service';\r\n\r\n@Controller('events')\r\nexport class EventController {\r\n  // Inject all dependencies\r\n  constructor(private readonly eventService: EventService) {}\r\n\r\n  // Get all events\r\n  @Public()\r\n  @Get('/organization/:id')\r\n  async getAllEvents(@Param('id') organizationId: string): Promise<Event[]> {\r\n    Logger.log('Retrieving all events (READ)');\r\n\r\n    return await this.eventService.getAll(organizationId);\r\n  }\r\n\r\n  // Get an amount of events to show on page\r\n  @Public()\r\n  @Get(':id/filter')\r\n  async getEventsPerPage(\r\n    @Param('id') organizationId: string,\r\n    @Query() query\r\n  ): Promise<Event[]> {\r\n    Logger.log('Retrieving events with filter (READ)');\r\n    return await this.eventService.getPerPage(query, organizationId);\r\n  }\r\n\r\n  // Get event by ID\r\n  @Public()\r\n  @Get(':id')\r\n  async getEventById(@Param('id') eventId: string): Promise<Event> {\r\n    try {\r\n      Logger.log(`Retrieve event with id: ${eventId} (READ)`);\r\n\r\n      return await this.eventService.getById(eventId);\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  // Create new event\r\n  @Public()\r\n  @Post('new/:companyId')\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  async createEvent(\r\n    @Param('companyId') companyId: string,\r\n    @Body() eventDto: EventDto\r\n  ): Promise<Object> {\r\n    try {\r\n      Logger.log(`Create event (POST)`);\r\n\r\n      const event = await this.eventService.create(companyId, eventDto);\r\n\r\n      return {\r\n        status: 201,\r\n        message: 'De gebeurtenis is succesvol aangemaakt!',\r\n      };\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  // Update event\r\n  @Public()\r\n  @Put(':companyId/:eventId/edit')\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  async updateEvent(\r\n    @Param('companyId') companyId: string,\r\n    @Param('eventId') eventId: string,\r\n    @Body() eventDto: EventDto\r\n  ): Promise<Object> {\r\n    try {\r\n      Logger.log(`Update event ${eventId} from company ${companyId} (PUT)`);\r\n\r\n      const event = await this.eventService.update(eventId, eventDto);\r\n\r\n      return {\r\n        status: 200,\r\n        message: 'De gebeurtenis is succesvol aangepast!',\r\n      };\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_MODIFIED);\r\n    }\r\n  }\r\n\r\n  // Archive/Dearchive event\r\n  @Public()\r\n  @Put(':companyId/:eventId/archive')\r\n  async archiveEvent(\r\n    @Param('companyId') companyId: string,\r\n    @Param('eventId') eventId: string,\r\n    @Query('isActive') isActive: boolean\r\n  ): Promise<Event> {\r\n    try {\r\n      Logger.log(\r\n        isActive\r\n          ? 'Archiveren'\r\n          : 'Dearchiveren' + ` event  from ${eventId} from company ${companyId}`\r\n      );\r\n\r\n      return await this.eventService.archive(eventId, isActive);\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_MODIFIED);\r\n    }\r\n  }\r\n}\r\n","import { IEvent } from '@roots/data';\r\nimport { ArrayNotEmpty, IsBoolean, isBoolean, IsDefined, IsNotEmpty, IsString, MaxLength } from 'class-validator';\r\nimport { Types } from 'mongoose';\r\nimport { Tag } from '../tag/tag.schema';\r\n\r\nexport class EventDto implements IEvent {\r\n  @IsString({ message: 'Titel moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Titel is verplicht!' })\r\n  @MaxLength(75, { message: 'Titel mag maximaal 75 karakters bevatten!' })\r\n  title: string;\r\n\r\n  @IsString({ message: 'Beschrijving moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Beschrijving is verplicht!' })\r\n  @MaxLength(150, { message: 'Beschrijving mag maximaal 150 karakters bevatten!' })\r\n  description: string;\r\n\r\n  @IsString({ message: 'Inhoud moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Inhoud is verplicht!' })\r\n  content: string;\r\n\r\n  @IsDefined({ message: 'Gebeurtenisdatum is verplicht!' })\r\n  eventDate: Date;\r\n\r\n  tags: [Types.ObjectId];\r\n\r\n  @IsBoolean({message: 'IsActive moet van het type boolean'})\r\n  isActive:boolean;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Organization, OrganizationSchema } from '../organization/organization.schema';\r\nimport { EventController } from './event.controller';\r\nimport { EventSchema } from './event.schema';\r\nimport { EventService } from './event.service';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([\r\n      { name: Event.name, schema: EventSchema },\r\n      { name: Organization.name, schema: OrganizationSchema }]),\r\n  ],\r\n  providers: [EventService],\r\n  controllers: [EventController],\r\n  exports: [EventService],\r\n})\r\nexport class EventModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { IEvent } from '@roots/data';\r\nimport { Types } from 'mongoose';\r\n\r\nexport type EventDocument = Event & Document;\r\n\r\n@Schema()\r\nexport class Event implements IEvent {\r\n  @Prop({\r\n    required: [true, 'Titel is verplicht!'],\r\n    maxLength: [75, 'Titel mag maximaal 75 karakters bevatten!']\r\n  })\r\n  title: string;\r\n\r\n  @Prop({\r\n    required: [true, 'Beschrijving is verplicht!'],\r\n    maxLength: [150, 'Beschrijving mag maximaal 150 karakters bevatten!']\r\n  })\r\n  description: string;\r\n\r\n  @Prop({\r\n    required: [true, 'Inhoud is verplicht!']\r\n  })\r\n  content: string;\r\n\r\n  @Prop({\r\n    required: [true, 'Gebeurtenisdatum is verplicht!']\r\n  })\r\n  eventDate: Date;\r\n\r\n  @Prop({\r\n    default: [],\r\n    type: [Types.ObjectId]\r\n  })\r\n  tags: [Types.ObjectId]\r\n\r\n  @Prop({\r\n    default:true\r\n  })\r\n  isActive: boolean;\r\n}\r\n\r\nexport const EventSchema = SchemaFactory.createForClass(Event);\r\n","import { HttpException, HttpStatus, Injectable, Logger } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport mongoose, { Model, Types } from 'mongoose';\r\nimport {\r\n  Organization,\r\n  OrganizationDocument,\r\n} from '../organization/organization.schema';\r\nimport { EventDto } from './event.dto';\r\nimport { Event, EventDocument } from './event.schema';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    @InjectModel(Event.name) private eventModel: Model<EventDocument>,\r\n    @InjectModel(Organization.name)\r\n    private organizationModel: Model<OrganizationDocument>\r\n  ) {}\r\n\r\n  // Get all events\r\n  async getAll(organizationId: string): Promise<Event[]> {\r\n    const events = await this.organizationModel.aggregate([\r\n      {\r\n        $match: {\r\n          _id: new Types.ObjectId(organizationId),\r\n        },\r\n      },\r\n      {\r\n        $unwind: {\r\n          path: '$events',\r\n        },\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: 'events',\r\n          localField: 'events',\r\n          foreignField: '_id',\r\n          as: 'events',\r\n        },\r\n      },\r\n      {\r\n        $sort: {\r\n          'events.eventDate': -1,\r\n        },\r\n      },\r\n      {\r\n        $group: {\r\n          _id: null,\r\n          events: {\r\n            $push: {\r\n              _id: {\r\n                $first: '$events._id',\r\n              },\r\n              title: {\r\n                $first: '$events.title',\r\n              },\r\n              description: {\r\n                $first: '$events.description',\r\n              },\r\n              eventDate: {\r\n                $first: '$events.eventDate',\r\n              },\r\n              isActive: {\r\n                $first: '$events.isActive',\r\n              },\r\n              tags: {\r\n                $first: '$events.tags',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        $project: {\r\n          _id: 0,\r\n          events: 1,\r\n        },\r\n      },\r\n    ]);\r\n\r\n    return events[0]?.events;\r\n  }\r\n\r\n  // Get amount of events per page + filter\r\n  async getPerPage(query: any, organizationId: string): Promise<Event[]> {\r\n    const events = await this.organizationModel.aggregate([\r\n      {\r\n        $match: {\r\n          _id: new Types.ObjectId(organizationId),\r\n        },\r\n      },\r\n      {\r\n        $unwind: {\r\n          path: '$events',\r\n        },\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: 'events',\r\n          localField: 'events',\r\n          foreignField: '_id',\r\n          as: 'events',\r\n        },\r\n      },\r\n      {\r\n        $sort: {\r\n          'events.eventDate': -1,\r\n        },\r\n      },\r\n      {\r\n        $group: {\r\n          _id: null,\r\n          events: {\r\n            $push: {\r\n              _id: {\r\n                $first: '$events._id',\r\n              },\r\n              title: {\r\n                $first: '$events.title',\r\n              },\r\n              description: {\r\n                $first: '$events.description',\r\n              },\r\n              eventDate: {\r\n                $first: '$events.eventDate',\r\n              },\r\n              isActive: {\r\n                $first: '$events.isActive',\r\n              },\r\n              tags: {\r\n                $first: '$events.tags',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        $project: {\r\n          _id: 0,\r\n          events: 1,\r\n        },\r\n      },\r\n    ]);\r\n\r\n    if (\r\n      query.old_records &&\r\n      query.new_records &&\r\n      query.show_archived_events === 'true'\r\n    ) {\r\n      return events[0]?.events.slice(\r\n        Number(query.old_records),\r\n        Number(query.new_records) + Number(query.old_records)\r\n      );\r\n    } else if (\r\n      query.old_records &&\r\n      query.new_records &&\r\n      query.show_archived_events === 'false'\r\n    ) {\r\n      const activeEvents: any[] = [];\r\n      if (events) {\r\n        if (events[0].events) {\r\n          events[0]?.events.forEach((event) => {\r\n            if (event.isActive) {\r\n              activeEvents.push(event);\r\n            }\r\n          });\r\n        }\r\n      }\r\n      return activeEvents.slice(\r\n        Number(query.old_records),\r\n        Number(query.new_records) + Number(query.old_records)\r\n      );\r\n    } else if (query.term && query.show_archived_events === 'true') {\r\n      const matchingEvents: any[] = [];\r\n      if (events) {\r\n        if (events[0].events) {\r\n          events[0].events.forEach((event) => {\r\n            if (event.title.includes(query.term)) {\r\n              matchingEvents.push(event);\r\n            }\r\n          });\r\n        }\r\n      }\r\n      return matchingEvents;\r\n    } else if (query.term && query.show_archived_events === 'false') {\r\n      const matchingEvents: any[] = [];\r\n      if (events) {\r\n        if (events[0].events) {\r\n          events[0].events.forEach((event) => {\r\n            if (event.title.includes(query.term) && event.isActive) {\r\n              matchingEvents.push(event);\r\n            }\r\n          });\r\n        }\r\n      }\r\n      return matchingEvents;\r\n    }\r\n  }\r\n\r\n  // Get event by ID\r\n  async getById(id: string): Promise<Event> {\r\n    const event = await this.organizationModel.aggregate([\r\n      {\r\n        $unwind: {\r\n          path: '$events',\r\n        },\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: 'events',\r\n          localField: 'events',\r\n          foreignField: '_id',\r\n          as: 'events',\r\n        },\r\n      },\r\n      {\r\n        $match: {\r\n          'events._id': new mongoose.Types.ObjectId(id),\r\n        },\r\n      },\r\n      {\r\n        $project: {\r\n          _id: 0,\r\n          events: 1,\r\n        },\r\n      },\r\n    ]);\r\n\r\n    if (event.length === 0)\r\n      throw new HttpException(\r\n        `Deze gebeurtenis bestaat niet!`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n    return event[0]?.events[0];\r\n  }\r\n\r\n  // Create new organization\r\n  async create(organizationId: string, eventDto: EventDto): Promise<any> {\r\n    const event = await this.eventModel.create(eventDto);\r\n\r\n    const updatedOrganizationEvents =\r\n      await this.organizationModel.findOneAndUpdate(\r\n        { _id: organizationId },\r\n        { $push: { events: event._id } },\r\n        {\r\n          new: true,\r\n          runValidators: true,\r\n        }\r\n      );\r\n\r\n    if (!updatedOrganizationEvents)\r\n      throw new HttpException(\r\n        `Dit bedrijf bestaat niet!`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    return updatedOrganizationEvents;\r\n  }\r\n\r\n  // Update organization\r\n  async update(eventId: string, eventDto: EventDto): Promise<any> {\r\n    const updatedEventFromOrganization = await this.eventModel.findOneAndUpdate(\r\n      { _id: eventId },\r\n      {\r\n        $set: {\r\n          title: eventDto?.title,\r\n          description: eventDto?.description,\r\n          content: eventDto?.content,\r\n          tags: eventDto?.tags,\r\n          eventDate: eventDto?.eventDate,\r\n        },\r\n      },\r\n      {\r\n        new: true,\r\n        runValidators: true,\r\n      }\r\n    );\r\n\r\n    if (!updatedEventFromOrganization)\r\n      throw new HttpException(\r\n        `Deze gebeurtenis bestaat niet!`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    return updatedEventFromOrganization;\r\n  }\r\n\r\n  // Archive/Dearchive event\r\n  async archive(eventId: string, isActive: boolean): Promise<any> {\r\n    const updatedArchive = await this.eventModel.findOneAndUpdate(\r\n      { _id: new Types.ObjectId(eventId) },\r\n      {\r\n        $set: {\r\n          isActive: isActive,\r\n        },\r\n      },\r\n      {\r\n        new: true,\r\n        runValidators: true,\r\n      }\r\n    );\r\n\r\n    if (!updatedArchive)\r\n      throw new HttpException(\r\n        `Deze gebeurtenis bestaat niet!`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    return await this.getById(eventId);\r\n  }\r\n}\r\n","import { Body, Controller, Get, Logger, Param, Post, Put } from '@nestjs/common';\r\nimport { Public } from '../auth/auth.module';\r\nimport { ParseObjectIdPipe } from '../shared/pipes/ParseObjectIdPipe';\r\nimport { LogDTO } from './log.dto';\r\nimport { Log } from './log.schema';\r\nimport { LogService } from './log.service';\r\n\r\n\r\n@Controller('log')\r\nexport class LogController {\r\n  constructor(private readonly logService: LogService) { }\r\n\r\n  @Public()\r\n  @Get(':organizationId')\r\n  async getAll(@Param('organizationId') organizationId: string): Promise<Log[]> {\r\n    Logger.log(`Retrieve logs (READ)`);\r\n\r\n    return await this.logService.getAll(organizationId);\r\n  }\r\n\r\n  @Public()\r\n  @Put(':organizationId')     \r\n  async createLog(@Param('organizationId') organizationId: string, @Body() logDto:LogDTO): Promise<Log> {\r\n    return await this.logService.create(organizationId,logDto);\r\n  }\r\n}    ","import { ILog, ITag } from '@roots/data'\r\nimport { IsDefined, IsNotEmpty, IsString, MaxLength } from 'class-validator';\r\n\r\n\r\nexport class LogDTO implements ILog {\r\n    @IsString({ message: 'Editor moet van het type string zijn!' })\r\n    editor: string;\r\n    @IsString({ message: 'Action moet van het type string zijn!' })\r\n    action: string;\r\n    @IsString({ message: 'Object moet van het type string zijn!' })\r\n    object: string;\r\n    logStamp: Date;\r\n    \r\n}","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Organization } from '@roots/data';\r\nimport { LogController } from '../log/log.controller';\r\nimport { LogService } from '../log/log.service';\r\nimport { OrganizationSchema } from '../organization/organization.schema';\r\nimport { Log, LogSchema } from './log.schema';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([{ name: Log.name, schema: LogSchema }, {\r\n      name: Organization.name, schema: OrganizationSchema\r\n    }]),\r\n  ],\r\n  providers: [LogService],\r\n  controllers: [LogController],\r\n  exports: [MongooseModule, LogService],\r\n})\r\nexport class LogModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { ILog, IOrganization } from '@roots/data';\r\nimport { isDefined, IsDefined, IsString } from 'class-validator';\r\n\r\nexport type LogDocument = Log & Document;\r\n\r\n@Schema()\r\nexport class Log implements ILog {\r\n    @IsString({ message: 'Editor moet van het type string zijn!' })\r\n    @Prop()\r\n    editor: string;\r\n    \r\n    @IsString({ message: 'Action moet van het type string zijn!' })\r\n    @Prop()\r\n    action: string;\r\n    \r\n    @IsString({ message: 'Object moet van het type string zijn!' })\r\n    @Prop()\r\n    object: string;\r\n    \r\n    @Prop({default: new Date()})\r\n    logStamp: Date;\r\n  \r\n}\r\n\r\nexport const LogSchema = SchemaFactory.createForClass(Log);\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Organization } from '@roots/data';\r\nimport { Model } from 'mongoose';\r\nimport { OrganizationDocument } from '../organization/organization.schema';\r\nimport { LogDTO } from './log.dto';\r\nimport { Log, LogDocument } from './log.schema';\r\n\r\n@Injectable()\r\nexport class LogService {\r\n  constructor(\r\n    @InjectModel(Log.name)\r\n    private LogModel: Model<LogDocument>,\r\n    @InjectModel(Organization.name)\r\n    private organizationModel: Model<OrganizationDocument>\r\n  ) {}\r\n\r\n  async getAll(organizationId: string): Promise<Log[]> {\r\n    return await this.organizationModel.findOne(\r\n      { _id: organizationId },\r\n      { logs: 1 }\r\n    );\r\n  }\r\n\r\n  async create(organizationId: string, logDto: LogDTO): Promise<Log> {\r\n    return await this.organizationModel.findOneAndUpdate(\r\n      { _id: organizationId },\r\n      {\r\n        $push: {\r\n          logs: logDto,\r\n        },\r\n      },\r\n      {\r\n        new: true,\r\n        runValidators: true,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Body, Controller, Get, Logger, Param, Post } from '@nestjs/common';\r\nimport { Public } from '../auth/auth.module';\r\nimport { ParseObjectIdPipe } from '../shared/pipes/ParseObjectIdPipe';\r\nimport { CreateOrganizationDTO } from './organization.dto';\r\nimport { Organization } from './organization.schema';\r\nimport { OrganizationService } from './organization.service';\r\n\r\n@Controller()\r\nexport class OrganizationController {\r\n  // Inject all dependencies\r\n  constructor(private readonly organizationService: OrganizationService) { }\r\n\r\n  // Get all organizations\r\n  @Public()\r\n  @Get('organizations')\r\n  async getAll(): Promise<Organization[]> {\r\n    Logger.log(`Retrieve organization (READ)`);\r\n\r\n    return await this.organizationService.getAll();\r\n  }\r\n\r\n  // Get organization by ID\r\n  @Public()\r\n  @Get('organizations/:id')\r\n  async getById(@Param('id', ParseObjectIdPipe) id: string): Promise<Organization> {\r\n    Logger.log(`Retrieve organization with id: ${id} (READ)`);\r\n\r\n    return await this.organizationService.getById(id);\r\n  }\r\n\r\n  // Create new organization\r\n  @Public()\r\n  @Post('organizations')     \r\n  async createCommunity(@Body() createOrganizationDto: CreateOrganizationDTO): Promise<Organization> {\r\n    return await this.organizationService.create(createOrganizationDto);\r\n  }\r\n}    ","import { Optional } from '@nestjs/common';\r\nimport { IsDefined, IsString } from 'class-validator';\r\n\r\nexport class CreateOrganizationDTO {\r\n    @IsString({ message: 'Naam moet van het type string zijn!' })\r\n    @IsDefined({ message: 'Naam is verplicht!' })\r\n    name: string;\r\n\r\n    @IsString({ message: 'Email domein moet van het type string zijn!' })\r\n    @IsDefined({ message: 'Email domein is verplicht!' })\r\n    emailDomain: string;\r\n}\r\n\r\nexport class UpdateOrganizationDTO {\r\n    @Optional()\r\n    @IsString({ message: 'Naam moet van het type string zijn!' })\r\n    @IsDefined({ message: 'Naam is verplicht!' })\r\n    name: string;\r\n\r\n    @Optional()\r\n    @IsString({ message: 'Email domein moet van het type string zijn!' })\r\n    @IsDefined({ message: 'Email domein is verplicht!' })\r\n    emailDomain: string;\r\n}","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Log } from '@roots/data';\r\nimport { LogSchema } from '../log/log.schema';\r\nimport { OrganizationController } from './organization.controller';\r\nimport { Organization, OrganizationSchema } from './organization.schema';\r\nimport { OrganizationService } from './organization.service';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([{ name: Organization.name, schema: OrganizationSchema }]),\r\n  ],\r\n  providers: [OrganizationService],\r\n  controllers: [OrganizationController],\r\n  exports: [MongooseModule, OrganizationService],\r\n})\r\nexport class OrganizationModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { IOrganization } from '@roots/data';\r\nimport { IsDefined, IsString } from 'class-validator';\r\nimport { Types } from 'mongoose';\r\nimport { LogSchema } from '../log/log.schema';\r\n\r\nexport type OrganizationDocument = Organization & Document;\r\n\r\n@Schema()\r\nexport class Organization implements IOrganization {\r\n  \r\n  @IsString({ message: 'Naam moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Naam is verplicht!' })\r\n  @Prop()\r\n  name: string;\r\n\r\n  @IsString({ message: 'Email domein moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Email domein is verplicht!' })\r\n  @Prop()\r\n  emailDomain: string;\r\n\r\n  @Prop({\r\n    default: [],\r\n    type:[Types.ObjectId]\r\n  })\r\n  events: [Types.ObjectId];\r\n\r\n  @Prop({\r\n    default: [],\r\n    type: [Types.ObjectId]\r\n  })\r\n  tags: [Types.ObjectId]\r\n\r\n  @Prop({\r\n    default:[],\r\n    type:[LogSchema]\r\n  })\r\n  logs: []\r\n}\r\n\r\nexport const OrganizationSchema = SchemaFactory.createForClass(Organization);\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model } from 'mongoose';\r\nimport { CreateOrganizationDTO } from './organization.dto';\r\nimport { Organization, OrganizationDocument } from './organization.schema';\r\n\r\n@Injectable()\r\nexport class OrganizationService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    @InjectModel(Organization.name)\r\n    private organizationModel: Model<OrganizationDocument>\r\n  ) {}\r\n\r\n  // Get organization by email domain\r\n  async getByEmailDomain(\r\n    emailDomain: string\r\n  ): Promise<Organization | undefined> {\r\n    const organization = await this.organizationModel.findOne({ emailDomain });\r\n\r\n    if (!organization)\r\n      throw new HttpException(\r\n        'Er bestaat geen organisatie met het opgegeven email domein!',\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    return organization;\r\n  }\r\n\r\n  // Get organization by ID\r\n  async getById(_id: string): Promise<Organization> {\r\n    const organization = await this.organizationModel.findOne({ _id });\r\n\r\n    if (!organization)\r\n      throw new HttpException(\r\n        'Organisatie bestaat niet!',\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    return organization;\r\n  }\r\n\r\n  // Get all organizations\r\n  async getAll(): Promise<Organization[]> {\r\n    return await this.organizationModel.find();\r\n  }\r\n\r\n  // Create new organization\r\n  async create(\r\n    createOrganizationDTO: CreateOrganizationDTO\r\n  ): Promise<Organization> {\r\n    await this.validate(createOrganizationDTO);\r\n\r\n    const newOrganization = new this.organizationModel({\r\n      ...createOrganizationDTO,\r\n    });\r\n\r\n    return await this.organizationModel.create(newOrganization);\r\n  }\r\n\r\n  // Check if organization already exists\r\n  async validate(organization: any): Promise<void> {\r\n    if (\r\n      (await this.organizationModel.find({ name: organization.name })).length > 0\r\n    ) {\r\n      throw new HttpException(\r\n        `Er bestaat al een bedrijf met de opgegeven naam!`,\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n\r\n    if (\r\n      (await this.organizationModel.find({ emailDomain: organization.emailDomain })).length > 0\r\n    ) {\r\n      throw new HttpException(\r\n        `Er bestaat al een bedrijf met het opgegeven email domein!`,\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { MailService } from './email.service';\r\n\r\n@Module({\r\n  providers: [MailService],\r\n  exports: [MailService],\r\n})\r\nexport class MailModule {}\r\n","import { MailerService } from '@nestjs-modules/mailer';\r\nimport { Injectable } from '@nestjs/common';\r\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\r\nimport { environment } from 'apps/roots-api/src/environments/environment';\r\nimport { Public } from '../../auth/auth.module';\r\n\r\n@Injectable()\r\nexport class MailService {\r\n  // Inject all dependencies\r\n  constructor(private mailService: MailerService) {}\r\n\r\n  // Send verification mail\r\n  @Public()\r\n  async SendVerificationMail(\r\n    email: string,\r\n    receiverName: string,\r\n    verificationCode: string\r\n  ) {\r\n    await this.mailService.sendMail({\r\n      to: email,\r\n      from: environment.EMAIL_SENDINGEMAIL,\r\n      subject: 'Roots | E-mailverificatie',\r\n      html: `<div style=\"font-family: Helvetica, sans-serif\"> <h1 style=\"font-weight: bold\">Welkom bij Roots, ${receiverName}!</h1> <p>Gebruik de onderstaande code om je account te verifiëren.</p> <p style=\"font-size:24px; color: #1353d9; font-weight:900;\">${verificationCode}</p> <p style=\"font-size: 11px; font-style: italic; margin-top: 15px\">De code is voor de volgende 24 uur geldig.</p> <p style=\"font-size: 14px; margin-top: 25px\">Groetjes het Roots-team</p> </div>`,\r\n    });\r\n  }\r\n\r\n  // Send reset password mail\r\n  @Public()\r\n  async SendPasswordResetMail(\r\n    email: string,\r\n    receiverName: string,\r\n    tokenId: string\r\n  ) {\r\n    const link = environment.APPLICATION_URL + '/password_reset/' + tokenId;\r\n\r\n    await this.mailService.sendMail({\r\n      to: email,\r\n      from: environment.EMAIL_SENDINGEMAIL,\r\n      subject: 'Roots | Wachtwoord resetten',\r\n      html: `<div style=\"font-family: Helvetica, sans-serif\"> <h1 style=\"font-weight: bold\">Hallo ${receiverName}!</h1> <p style=\"padding-bottom:15px;\">Druk op de onderstaande knop om je wachtwoord opnieuw in te stellen.</p> <a href=\"${link}\" style=\"color: white; background: #1353d9; text-decoration: none; padding: 10px 28px;\"> Wachtwoord instellen </a> <p style=\"font-size: 11px; font-style: italic; margin-top: 30px\">De code is voor de volgende 24 uur geldig.</p> <p style=\"font-size: 14px; margin-top: 25px\">Groetjes het Roots-team</p></div>`,\r\n    });\r\n  }\r\n}\r\n","import { BadRequestException } from '@nestjs/common';\r\n\r\nexport class ValidationException extends BadRequestException {\r\n  constructor(public validationErrors: string[]) {\r\n    super();\r\n  }\r\n}\r\n","import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\r\nimport { ValidationException } from './validation.exception';\r\n\r\n@Catch(ValidationException)\r\nexport class ValidationFilter implements ExceptionFilter {\r\n  catch(exception: ValidationException, host: ArgumentsHost) {\r\n    const ctx = host.switchToHttp();\r\n    const response = ctx.getResponse();\r\n\r\n    return response.status(400).json({\r\n      statusCode: 400,\r\n      timestamp: new Date().toISOString(),\r\n      errors: exception.validationErrors,\r\n    });\r\n  }\r\n}\r\n","import { Injectable, PipeTransform } from '@nestjs/common';\r\nimport { ObjectId } from 'mongodb';\r\nimport { ValidationException } from '../filters/validation.exception';\r\n\r\n@Injectable()\r\nexport class ParseObjectIdPipe implements PipeTransform<any, ObjectId> {\r\n  public transform(value: any): ObjectId {\r\n    try {\r\n      const transformedObjectId: ObjectId = ObjectId.createFromHexString(value);\r\n      return transformedObjectId;\r\n    } catch (error) {\r\n      throw new ValidationException([\r\n        `ObjectId has wrong value: ${value}, ObjectId is not valid!`,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  public static isValidObjectId(value: any): boolean {\r\n    try {\r\n      ObjectId.createFromHexString(value);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/ban-types */\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  Get,\r\n  HttpException,\r\n  HttpStatus,\r\n  Logger,\r\n  Param,\r\n  Post,\r\n  Put,\r\n} from '@nestjs/common';\r\nimport { Public } from '../auth/auth.module';\r\nimport { ParseObjectIdPipe } from '../shared/pipes/ParseObjectIdPipe';\r\nimport { TagDto } from './tag.dto';\r\nimport { Tag } from './tag.schema';\r\nimport { TagService } from './tag.service';\r\n\r\n@Controller('tags')\r\nexport class TagController {\r\n  // Inject all dependencies\r\n  constructor(private readonly tagService: TagService) {}\r\n\r\n  // Get all tags from organization\r\n  @Public()\r\n  @Get('organizations/:organizationId')\r\n  async getAllTagsByOrganization(\r\n    @Param('organizationId', ParseObjectIdPipe) organizationId: string\r\n  ): Promise<Tag[]> {\r\n    Logger.log('Retrieving all tags by organization (READ)');\r\n\r\n    return await this.tagService.getAllByOrganization(organizationId);\r\n  }\r\n\r\n  // Get tag by id\r\n  @Public()\r\n  @Get(':tagId')\r\n  async getTagById(\r\n    @Param('tagId', ParseObjectIdPipe) tagId: string\r\n  ): Promise<Tag> {\r\n    try {\r\n      Logger.log(`Retrieve tag with id: ${tagId} (READ)`);\r\n\r\n      return await this.tagService.getById(tagId);\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  // Create new event tag\r\n  @Public()\r\n  @Post('new/organizations/:organizationId/events/:eventId')\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  async createTagInEvent(\r\n    @Param('organizationId', ParseObjectIdPipe) organizationId: string,\r\n    @Param('eventId', ParseObjectIdPipe) eventId: string,\r\n    @Body() tagDto: TagDto\r\n  ): Promise<Object> {\r\n    try {\r\n      Logger.log(`Create tag (POST)`);\r\n\r\n      await this.tagService.createInEvent(organizationId, eventId, tagDto);\r\n\r\n      return {\r\n        status: 201,\r\n        message: 'De tag is succesvol aangemaakt!',\r\n      };\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  // Create new organization tag\r\n  @Public()\r\n  @Post('new/organizations/:organizationId')\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  async createTagInOrganization(\r\n    @Param('organizationId', ParseObjectIdPipe) organizationId: string,\r\n    @Body() tagDto: TagDto\r\n  ): Promise<Object> {\r\n    try {\r\n      Logger.log(`Create tag (POST)`);\r\n      const tag = await this.tagService.createInOrganization(\r\n        organizationId,\r\n        tagDto\r\n      );\r\n\r\n      return {\r\n        status: 201,\r\n        message: 'De tag is succesvol aangemaakt!',\r\n      };\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  // Update tag\r\n  @Public()\r\n  @Put(':tagId')\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  async updateTag(\r\n    @Param('tagId', ParseObjectIdPipe) tagId: string,\r\n    @Body() tagDto: TagDto\r\n  ): Promise<Object> {\r\n    try {\r\n      Logger.log(`Update tag ${tagId} (PUT)`);\r\n\r\n      const tag = await this.tagService.update(tagId, tagDto);\r\n\r\n      return {\r\n        status: 200,\r\n        message: 'De tag is succesvol aangepast!',\r\n      };\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_MODIFIED);\r\n    }\r\n  }\r\n}\r\n","import { ITag } from '@roots/data'\r\nimport { IsDefined, IsNotEmpty, IsString, MaxLength } from 'class-validator';\r\n\r\n\r\nexport class TagDto implements ITag {\r\n    @IsNotEmpty({message: 'Naam is verplicht!'})\r\n    @IsDefined({message: 'Naam is verplicht!'})\r\n    @MaxLength(15, {message: 'Naam is te lang!'})\r\n    @IsString({message: 'Name moet van het type string zijn!'})\r\n    name: string;\r\n}","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { EventSchema } from '../event/event.schema';\r\nimport {\r\n  Organization,\r\n  OrganizationSchema,\r\n} from '../organization/organization.schema';\r\nimport { TagController } from './tag.controller';\r\nimport { Tag, TagSchema } from './tag.schema';\r\nimport { TagService } from './tag.service';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([{ name: Tag.name, schema: TagSchema }]),\r\n    MongooseModule.forFeature([{ name: Organization.name, schema: OrganizationSchema }]),\r\n    MongooseModule.forFeature([{ name: Event.name, schema: EventSchema }])\r\n  ],\r\n  providers: [TagService],\r\n  controllers: [TagController],\r\n  exports: [MongooseModule, TagService],\r\n})\r\nexport class TagModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { ITag } from '@roots/data';\r\nimport { Types } from 'mongoose';\r\n\r\nexport type TagDocument = Tag & Document;\r\n\r\n@Schema()\r\nexport class Tag implements ITag {\r\n  @Prop({\r\n    required:true\r\n  })\r\n  name: string;\r\n\r\n  @Prop({\r\n    type: Types.ObjectId, required:true\r\n  })\r\n  organization: Types.ObjectId\r\n}\r\n\r\nexport const TagSchema = SchemaFactory.createForClass(Tag);","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model, Types } from 'mongoose';\r\nimport {\r\n  Organization,\r\n  OrganizationDocument,\r\n} from '../organization/organization.schema';\r\nimport { TagDto } from './tag.dto';\r\nimport { Tag, TagDocument } from './tag.schema';\r\nimport { Event, EventDocument } from '../event/event.schema';\r\n\r\n@Injectable()\r\nexport class TagService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    @InjectModel(Tag.name)\r\n    private tagModel: Model<TagDocument>,\r\n    @InjectModel(Organization.name)\r\n    private organizationModel: Model<OrganizationDocument>,\r\n    @InjectModel(Event.name)\r\n    private eventModel: Model<EventDocument>\r\n  ) {}\r\n\r\n  // Get all tags from organization\r\n  async getAllByOrganization(organizationId: string): Promise<Tag[]> {\r\n    const organizationTagIds = await this.organizationModel.findOne(\r\n      { _id: new Types.ObjectId(organizationId) },\r\n      { tags: 1 }\r\n    );\r\n    if (!organizationTagIds)\r\n      throw new HttpException(\r\n        'Organisatie niet gevonden',\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    // eslint-disable-next-line prefer-const\r\n    let tags = [];\r\n    for await (const tagId of organizationTagIds.tags) {\r\n      const tag = await this.tagModel.findOne({\r\n        _id: new Types.ObjectId(tagId),\r\n      });\r\n\r\n      tags.push({\r\n        _id: tag._id,\r\n        name: tag.name,\r\n        organisation: tag.organization,\r\n      });\r\n    }\r\n\r\n    return tags;\r\n  }\r\n\r\n  // Get tag by ID\r\n  async getById(tagId: string): Promise<Tag> {\r\n    const tag = await this.tagModel.findOne({ _id: new Types.ObjectId(tagId) });\r\n\r\n    if (!tag)\r\n      throw new HttpException('Tag niet gevonden', HttpStatus.NOT_FOUND);\r\n\r\n    return tag;\r\n  }\r\n\r\n  // Create event tag\r\n  async createInEvent(\r\n    organizationId: string,\r\n    eventId: string,\r\n    tagDto: TagDto\r\n  ): Promise<Tag> {\r\n    // validation\r\n    const organization = await this.organizationModel.findOne({\r\n      _id: new Types.ObjectId(organizationId),\r\n    });\r\n    if (!organization)\r\n      throw new HttpException(\r\n        'Organisatie niet gevonden',\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const event = (await organization).events\r\n      .filter((p) =>\r\n        new Types.ObjectId((p as any)._id).equals(new Types.ObjectId(eventId))\r\n      )\r\n      .at(0);\r\n    if (!event)\r\n      throw new HttpException(\r\n        `Event niet gevonden van organisatie met id: ${organizationId}`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    // new tag\r\n    const newTag = new this.tagModel({\r\n      ...tagDto,\r\n      organization: new Types.ObjectId(organizationId),\r\n    });\r\n\r\n    // create new tag in collection\r\n    const tag = await this.tagModel.create(newTag);\r\n    if (!tag)\r\n      throw new HttpException(\r\n        'Kan geen nieuwe tag aanmaken',\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n\r\n    // push to organization\r\n    await this.organizationModel.updateOne(\r\n      { _id: new Types.ObjectId(organizationId) },\r\n      {\r\n        $push: { tags: new Types.ObjectId(tag._id) },\r\n      },\r\n      {\r\n        new: true,\r\n      }\r\n    );\r\n\r\n    // push to event\r\n    await this.eventModel.updateOne(\r\n      {\r\n        _id: new Types.ObjectId(eventId),\r\n      },\r\n      { $push: { tags: new Types.ObjectId(tag._id) } },\r\n      { new: true }\r\n    );\r\n\r\n    return tag;\r\n  }\r\n\r\n  // Create organization tag\r\n  async createInOrganization(\r\n    organizationId: string,\r\n    tagDto: TagDto\r\n  ): Promise<Tag> {\r\n    // validation\r\n    const organization = this.organizationModel.findOne({\r\n      _id: new Types.ObjectId(organizationId),\r\n    });\r\n    if (!organization)\r\n      throw new HttpException(\r\n        'Organisatie niet gevonden',\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    // new tag\r\n    const newTag = new this.tagModel({\r\n      ...tagDto,\r\n      organization: new Types.ObjectId(organizationId),\r\n    });\r\n\r\n    // create new tag in collection\r\n    const tag = await this.tagModel.create(newTag);\r\n    if (!tag)\r\n      throw new HttpException(\r\n        'Kan geen nieuwe tag aanmaken',\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n\r\n    // push to organization\r\n    await this.organizationModel.updateOne(\r\n      { _id: new Types.ObjectId(organizationId) },\r\n      {\r\n        $push: { tags: new Types.ObjectId(tag._id) },\r\n      },\r\n      {\r\n        new: true,\r\n      }\r\n    );\r\n\r\n    return tag;\r\n  }\r\n\r\n  // Update tag\r\n  async update(tagId: string, tagDto: TagDto): Promise<Tag> {\r\n    const updatedTag = await this.tagModel.findOneAndUpdate(\r\n      { _id: new Types.ObjectId(tagId) },\r\n      {\r\n        $set: {\r\n          name: tagDto?.name,\r\n        },\r\n      },\r\n      {\r\n        new: true,\r\n        runValidators: true,\r\n      }\r\n    );\r\n\r\n    if (!updatedTag) {\r\n      throw new HttpException('Deze tag bestaat niet', HttpStatus.NOT_FOUND);\r\n    }\r\n\r\n    return updatedTag;\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Token, TokenSchema } from './token.schema';\r\nimport { TokenService } from './token.service';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([{ name: Token.name, schema: TokenSchema }]),\r\n  ],\r\n  providers: [TokenService],\r\n  exports: [MongooseModule, TokenService],\r\n})\r\nexport class TokenModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { IToken } from '@roots/data';\r\nimport { Types } from 'mongoose';\r\n\r\nexport type TokenDocument = Token & Document;\r\n\r\n@Schema()\r\nexport class Token implements IToken {\r\n  _id: Types.ObjectId;\r\n\r\n  @Prop({\r\n    required: true,\r\n  })\r\n  type: string;\r\n\r\n  @Prop()\r\n  verificationCode: string;\r\n\r\n  @Prop({\r\n    required: true,\r\n  })\r\n  expirationDate: Date;\r\n\r\n  @Prop({\r\n    ref: 'User',\r\n    type: Types.ObjectId,\r\n  })\r\n  userId: Types.ObjectId;\r\n}\r\n\r\nexport const TokenSchema = SchemaFactory.createForClass(Token);\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model } from 'mongoose';\r\nimport { Token, TokenDocument } from './token.schema';\r\n\r\n@Injectable()\r\nexport class TokenService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    @InjectModel(Token.name) private tokenModel: Model<TokenDocument>\r\n  ) {}\r\n\r\n  // Get token by ID\r\n  async getById(id: string): Promise<Token> {\r\n    const token = await this.tokenModel.findOne({ _id: id });\r\n\r\n    if (!token)\r\n      throw new HttpException('Token bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return token;\r\n  }\r\n\r\n  // get user by ID from token\r\n  async getByUserId(userId: string, type: string): Promise<Token> {\r\n    const token = await this.tokenModel.findOne({ userId, type });\r\n\r\n    if (!token)\r\n      throw new HttpException('Token bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return token;\r\n  }\r\n\r\n  // Create new token\r\n  async create(type: string, userId: string): Promise<Token> {\r\n    const newToken: any = {\r\n      type: type,\r\n      expirationDate: new Date(Date.now() + 3600 * 1000 * 24),\r\n      userId: userId,\r\n    };\r\n\r\n    type === 'verification'\r\n      ? (newToken.verificationCode = Math.floor(\r\n          100000 + Math.random() * 900000\r\n        ))\r\n      : (newToken.verificationCode = '');\r\n\r\n    return await this.tokenModel.create(newToken);\r\n  }\r\n\r\n  // Delete token\r\n  async delete(userId: string, type: string) {\r\n    return this.tokenModel.deleteMany({ userId, type });\r\n  }\r\n}\r\n","import {\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  Logger,\r\n  Param,\r\n  Post,\r\n  Req,\r\n} from '@nestjs/common';\r\nimport { Public } from '../auth/auth.module';\r\nimport { ParseObjectIdPipe } from '../shared/pipes/ParseObjectIdPipe';\r\nimport { UserDto } from './user.dto';\r\nimport { User } from './user.schema';\r\nimport { UserService } from './user.service';\r\n\r\n@Controller()\r\nexport class UserController {\r\n  // Inject all dependencies\r\n  constructor(private readonly userService: UserService) {}\r\n\r\n  // Get all participants from organization\r\n  @Public()\r\n  @Get('organizations/:id/participants')\r\n  async getParticipants(\r\n    @Param('id', ParseObjectIdPipe) id: string\r\n  ): Promise<User[]> {\r\n    Logger.log(`Retrieve participants (READ)`);\r\n\r\n    return await this.userService.getAllParticipants(id);\r\n  }\r\n\r\n  // Get user by id\r\n  @Public()\r\n  @Get('users/:id')\r\n  async getById(@Param('id', ParseObjectIdPipe) id: string): Promise<User> {\r\n    Logger.log(`Retrieve user with id: ${id} (READ)`);\r\n\r\n    return await this.userService.getById(id);\r\n  }\r\n\r\n  // Create new user\r\n  @Post('users/new')\r\n  async create(@Body() UserDto: UserDto): Promise<User> {\r\n    Logger.log(`Creating user (CREATE)`);\r\n\r\n    return await this.userService.create(UserDto);\r\n  }\r\n\r\n  // Get user status (activated/deactivated)\r\n  @Post('users/:id/status')\r\n  async status(\r\n    @Param('id', ParseObjectIdPipe) id: string,\r\n    @Req() req\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n  ): Promise<User> {\r\n    Logger.log(`Changing isActive status of user with an id of ${id} (POST)`);\r\n\r\n    return await this.userService.status(id, req);\r\n  }\r\n}\r\n","import { IsDefined, IsEmail, IsString, Matches } from 'class-validator';\r\n\r\nexport class UserDto {\r\n  @IsString({ message: 'Voornaam moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Voornaam is verplicht!' })\r\n  firstname: string;\r\n\r\n  @IsString({ message: 'Achternaam moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Achternaam is verplicht!' })\r\n  lastname: string;\r\n\r\n  @IsEmail()\r\n  @IsString({ message: 'E-mailadres moet van het type string zijn!!' })\r\n  @IsDefined({ message: 'E-mailadres is verplicht!' })\r\n  emailAddress: string;\r\n\r\n  @IsString({ message: 'Wachtwoord moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Wachtwoord is verplicht!' })\r\n  @Matches(new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)[a-zA-Z\\\\d]{8,}$'), {\r\n    message:\r\n      'Het wachtwoord is niet sterk genoeg! Het moet op zijn minst bestaan uit: 8 karakters, 1 hoofdletter, 1 kleine letter and 1 getal!',\r\n  })\r\n  password: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { OrganizationModule } from '../organization/organization.module';\r\nimport { UserController } from './user.controller';\r\nimport { User, UserSchema } from './user.schema';\r\nimport { UserService } from './user.service';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]), OrganizationModule\r\n  ],\r\n  controllers: [UserController],\r\n  providers: [UserService],\r\n  exports: [UserService],\r\n})\r\nexport class UserModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { IUser } from '@roots/data';\r\nimport {\r\n  IsDefined,\r\n  isEmail,\r\n  IsEmail,\r\n  IsString,\r\n  Matches,\r\n} from 'class-validator';\r\nimport { Types } from 'mongoose';\r\n\r\nexport type UserDocument = User & Document;\r\n\r\n@Schema()\r\nexport class User implements IUser {\r\n  _id: Types.ObjectId;\r\n\r\n  @Prop({\r\n    required: true,\r\n  })\r\n  @IsString({ message: 'Voornaam moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Voornaam is verplicht!' })\r\n  firstname: string;\r\n\r\n  @Prop({\r\n    required: true,\r\n  })\r\n  @IsString({ message: 'Achternaam moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Achternaam is verplicht!' })\r\n  lastname: string;\r\n\r\n  @IsEmail()\r\n  @IsString({ message: 'E-mailadres moet van het type string zijn!' })\r\n  @IsDefined({ message: 'E-mailadres is verplicht!' })\r\n  @Prop({\r\n    required: true,\r\n    unique: true,\r\n    validate: isEmail,\r\n  })\r\n  emailAddress: string;\r\n\r\n  @Prop({\r\n    required: true,\r\n  })\r\n  @IsString({ message: 'Wachtwoord moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Wachtwoord is verplicht!' })\r\n  @Matches(new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)[a-zA-Z\\\\d]{8,}$'), {\r\n    message:\r\n      'Het wachtwoord is niet sterk genoeg! Het moet op zijn minst bestaan uit: 8 karakters, 1 hoofdletter, 1 kleine letter and 1 getal!',\r\n  })\r\n  password: string;\r\n\r\n  @Prop()\r\n  isActive: boolean;\r\n\r\n  @Prop()\r\n  isVerified: boolean;\r\n\r\n  @Prop()\r\n  createdAt: Date;\r\n\r\n  @Prop()\r\n  lastLoginTimestamp: Date;\r\n\r\n  @Prop({\r\n    ref: 'Organization',\r\n    type: Types.ObjectId,\r\n  })\r\n  organization: Types.ObjectId;\r\n}\r\n\r\nexport const UserSchema = SchemaFactory.createForClass(User);\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport { Model } from 'mongoose';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { UserDto } from './user.dto';\r\nimport { User, UserDocument } from './user.schema';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    @InjectModel(User.name) private userModel: Model<UserDocument>,\r\n    private readonly organizationService: OrganizationService\r\n  ) {}\r\n\r\n  // Find user by email address\r\n  async findByEmailAddress(emailAddress: string): Promise<User> {\r\n    const user = await this.userModel.findOne({ emailAddress });\r\n\r\n    if (!user)\r\n      throw new HttpException('Gebruiker bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return user;\r\n  }\r\n\r\n  // Find user by ID\r\n  async getById(_id: string): Promise<User> {\r\n    const user = await this.userModel.findOne({ _id });\r\n\r\n    if (!user)\r\n      throw new HttpException('Gebruiker bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return user;\r\n  }\r\n\r\n  // Get all participants from organization\r\n  async getAllParticipants(organizationId: string): Promise<User[]> {\r\n    return await this.userModel.find({ organization: organizationId });\r\n  }\r\n\r\n  // Create new user\r\n  async create(UserDto: UserDto): Promise<User> {\r\n    await this.validate(UserDto);\r\n\r\n    const newUser = new this.userModel({\r\n      ...UserDto,\r\n      password: await bcrypt.hashSync(UserDto.password, 10),\r\n      isActive: true,\r\n      isVerified: false,\r\n      createdAt: new Date(),\r\n      organization: await this.organizationService.getByEmailDomain(\r\n        UserDto.emailAddress.split('@').at(1)\r\n      ),\r\n    });\r\n\r\n    return await this.userModel.create(newUser);\r\n  }\r\n\r\n  // Set/Update last login timestamp\r\n  async setLastLoginTimeStamp(id: string) {\r\n    const user = await this.userModel.findOneAndUpdate({ _id: id }, [\r\n      { $set: { lastLoginTimestamp: new Date() } },\r\n    ]);\r\n\r\n    if (!user)\r\n      throw new HttpException('Gebruiker bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return user;\r\n  }\r\n\r\n  // Set/Hash password\r\n  async setPassword(userId: string, password: string) {\r\n    const encryptedPassword = await bcrypt.hashSync(password, 10);\r\n\r\n    const user = await this.userModel.findOneAndUpdate(\r\n      { _id: userId },\r\n      { password: encryptedPassword }\r\n    );\r\n\r\n    if (!user)\r\n      throw new HttpException('Gebruiker bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return user;\r\n  }\r\n\r\n  // Verify new account\r\n  async verifyAccount(userId: string) {\r\n    const user = await this.userModel.findOneAndUpdate({ _id: userId }, [\r\n      { $set: { isVerified: true } },\r\n    ]);\r\n\r\n    if (!user)\r\n      throw new HttpException('Gebruiker bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return user;\r\n  }\r\n\r\n  // Change user status (activated/deactivated)\r\n  async status(id: string, req: any): Promise<User> {\r\n    const targetUser = await this.getById(id);\r\n\r\n    if (\r\n      targetUser.organization.toString() !== req.user.organization.toString()\r\n    ) {\r\n      throw new HttpException(\r\n        `Je mag alleen gebruikers van activeren/deactiveren van het bedrijf waar je werkt!`,\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n\r\n    if (id.toString() === req.user._id.toString()) {\r\n      throw new HttpException(\r\n        `Je mag jouw eigen account niet activeren/deactiveren!`,\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n\r\n    return await this.userModel.findOneAndUpdate(\r\n      { _id: id },\r\n      [{ $set: { isActive: { $not: '$isActive' } } }],\r\n      { new: true }\r\n    );\r\n  }\r\n\r\n  // Validate user\r\n  async validate(user) {\r\n    if (\r\n      (await this.userModel.find({ emailAddress: user.emailAddress })).length >\r\n      0\r\n    ) {\r\n      throw new HttpException(\r\n        `Het e-mailadres is al in gebruik!`,\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n  }\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  //local\r\n\r\n  API_URL: 'mongodb://127.0.0.1:27017/roots',\r\n  APPLICATION_URL: 'http://localhost:4200',\r\n\r\n  //mailing\r\n  EMAIL_HOST: 'smtp.sendgrid.net',\r\n  EMAIL_USERNAME: 'apikey',\r\n  EMAIL_API_KEY:\r\n    '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',\r\n  EMAIL_SENDINGEMAIL: 'roots.team.noreply@gmail.com',\r\n};\r\n","export * from './lib/data';\r\n","import { Types } from 'mongoose';\r\n\r\n//INTERFACES\r\nexport interface IUser {\r\n  firstname: string;\r\n  lastname: string;\r\n  emailAddress: string;\r\n  password: string;\r\n  isActive: boolean;\r\n  organization: Types.ObjectId;\r\n}\r\n\r\nexport interface IOrganization {\r\n  name: string;\r\n  emailDomain: string;\r\n  events: Types.ObjectId[];\r\n  logs: ILog[];\r\n}\r\n\r\nexport interface IEvent {\r\n  title: string;\r\n  description: string;\r\n  content: string;\r\n  eventDate: Date;\r\n  isActive: boolean;\r\n}\r\n\r\nexport interface ITag {\r\n  name: string;\r\n}\r\n\r\nexport interface IToken {\r\n  type: string;\r\n  expirationDate: Date;\r\n}\r\n\r\n\r\nexport interface ILog{\r\n  editor: string;\r\n  action: string;\r\n  object: string;\r\n  logStamp: Date;\r\n}\r\n\r\nexport interface UserData {\r\n  initials:string;\r\n  firstname:string;\r\n  lastname:string;\r\n  emailAddress:string;\r\n  createdAt:Date;\r\n  lastLoginTimestamp: Date;\r\n  isActive: boolean;\r\n}\r\n\r\n\r\n// CLASSES\r\nexport class User implements IUser {\r\n  _id = new Types.ObjectId();\r\n  firstname = '';\r\n  lastname = '';\r\n  emailAddress = '';\r\n  password = '';\r\n  access_token = '';\r\n  organization = new Types.ObjectId();\r\n  initials = '';\r\n  isActive = true;\r\n  isVerified = true;\r\n}\r\n\r\nexport class Organization implements IOrganization {\r\n  _id = new Types.ObjectId();\r\n  name = '';\r\n  emailDomain = '';\r\n  events = [] as Types.ObjectId[];\r\n  tags = [] as Types.ObjectId[];\r\n  logs = [] as ILog[]\r\n}\r\n\r\nexport class Event implements IEvent {\r\n  title = '';\r\n  description = '';\r\n  content = '';\r\n  eventDate = new Date();\r\n  _id = new Types.ObjectId();\r\n  tags = [] as Types.ObjectId[];\r\n  isActive = true;\r\n}\r\n\r\nexport class Tag implements ITag {\r\n  _id = new Types.ObjectId();\r\n  name = '';\r\n  organization = new Types.ObjectId();\r\n}\r\n\r\n\r\nexport class Log implements ILog {\r\n  editor = '';\r\n  action = '';\r\n  object = '';\r\n  logStamp = new Date();\r\n}","module.exports = require(\"@nestjs-modules/mailer\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"class-validator\");","module.exports = require(\"express\");","module.exports = require(\"mongodb\");","module.exports = require(\"mongoose\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger, ValidationError, ValidationPipe } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\nimport { urlencoded, json } from 'express';\r\nimport { AppModule } from './app/app.module';\r\nimport { ValidationException } from './app/shared/filters/validation.exception';\r\nimport { ValidationFilter } from './app/shared/filters/validation.filter';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n\r\n  const globalPrefix = 'api';\r\n\r\n  app.setGlobalPrefix(globalPrefix);\r\n\r\n  app.use(json({ limit: '50mb' }));\r\n\r\n  app.use(urlencoded({ extended: true, limit: '50mb' }));\r\n\r\n  app.enableCors();\r\n\r\n  const port = process.env.PORT || 9000;\r\n\r\n  app.useGlobalFilters(new ValidationFilter());\r\n\r\n  app.useGlobalPipes(\r\n    new ValidationPipe({\r\n      skipMissingProperties: true,\r\n      exceptionFactory: (errors: ValidationError[]) => {\r\n        const messages = errors.map(\r\n          (error) =>\r\n            `${error.property} has wrong value: ${error.value}, ${Object.values(\r\n              error.constraints\r\n            ).join(', ')}`\r\n        );\r\n        return new ValidationException(messages);\r\n      },\r\n    })\r\n  );\r\n\r\n  await app.listen(port);\r\n\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}
=======
{"version":3,"file":"main.js","mappings":"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","sources":["webpack://roots/./apps/roots-api/src/app/app.controller.ts","webpack://roots/./apps/roots-api/src/app/app.module.ts","webpack://roots/./apps/roots-api/src/app/app.service.ts","webpack://roots/./apps/roots-api/src/app/auth/auth.controller.ts","webpack://roots/./apps/roots-api/src/app/auth/auth.module.ts","webpack://roots/./apps/roots-api/src/app/auth/auth.service.ts","webpack://roots/./apps/roots-api/src/app/auth/constants.ts","webpack://roots/./apps/roots-api/src/app/auth/jwt-auth.guard.ts","webpack://roots/./apps/roots-api/src/app/auth/jwt.strategy.ts","webpack://roots/./apps/roots-api/src/app/auth/local.strategy.ts","webpack://roots/./apps/roots-api/src/app/event/event.controller.ts","webpack://roots/./apps/roots-api/src/app/event/event.dto.ts","webpack://roots/./apps/roots-api/src/app/event/event.module.ts","webpack://roots/./apps/roots-api/src/app/event/event.schema.ts","webpack://roots/./apps/roots-api/src/app/event/event.service.ts","webpack://roots/./apps/roots-api/src/app/log/log.controller.ts","webpack://roots/./apps/roots-api/src/app/log/log.dto.ts","webpack://roots/./apps/roots-api/src/app/log/log.module.ts","webpack://roots/./apps/roots-api/src/app/log/log.schema.ts","webpack://roots/./apps/roots-api/src/app/log/log.service.ts","webpack://roots/./apps/roots-api/src/app/organization/organization.controller.ts","webpack://roots/./apps/roots-api/src/app/organization/organization.dto.ts","webpack://roots/./apps/roots-api/src/app/organization/organization.module.ts","webpack://roots/./apps/roots-api/src/app/organization/organization.schema.ts","webpack://roots/./apps/roots-api/src/app/organization/organization.service.ts","webpack://roots/./apps/roots-api/src/app/providers/email/email.module.ts","webpack://roots/./apps/roots-api/src/app/providers/email/email.service.ts","webpack://roots/./apps/roots-api/src/app/shared/filters/validation.exception.ts","webpack://roots/./apps/roots-api/src/app/shared/filters/validation.filter.ts","webpack://roots/./apps/roots-api/src/app/shared/pipes/ParseObjectIdPipe.ts","webpack://roots/./apps/roots-api/src/app/tag/tag.controller.ts","webpack://roots/./apps/roots-api/src/app/tag/tag.dto.ts","webpack://roots/./apps/roots-api/src/app/tag/tag.module.ts","webpack://roots/./apps/roots-api/src/app/tag/tag.schema.ts","webpack://roots/./apps/roots-api/src/app/tag/tag.service.ts","webpack://roots/./apps/roots-api/src/app/token/token.module.ts","webpack://roots/./apps/roots-api/src/app/token/token.schema.ts","webpack://roots/./apps/roots-api/src/app/token/token.service.ts","webpack://roots/./apps/roots-api/src/app/user/user.controller.ts","webpack://roots/./apps/roots-api/src/app/user/user.dto.ts","webpack://roots/./apps/roots-api/src/app/user/user.module.ts","webpack://roots/./apps/roots-api/src/app/user/user.schema.ts","webpack://roots/./apps/roots-api/src/app/user/user.service.ts","webpack://roots/./apps/roots-api/src/environments/environment.ts","webpack://roots/./libs/data/src/index.ts","webpack://roots/./libs/data/src/lib/data.ts","webpack://roots/external commonjs \"@nestjs-modules/mailer\"","webpack://roots/external commonjs \"@nestjs/common\"","webpack://roots/external commonjs \"@nestjs/core\"","webpack://roots/external commonjs \"@nestjs/jwt\"","webpack://roots/external commonjs \"@nestjs/mongoose\"","webpack://roots/external commonjs \"@nestjs/passport\"","webpack://roots/external commonjs \"bcryptjs\"","webpack://roots/external commonjs \"class-validator\"","webpack://roots/external commonjs \"express\"","webpack://roots/external commonjs \"mongodb\"","webpack://roots/external commonjs \"mongoose\"","webpack://roots/external commonjs \"passport-jwt\"","webpack://roots/external commonjs \"passport-local\"","webpack://roots/external commonjs \"tslib\"","webpack://roots/webpack/bootstrap","webpack://roots/./apps/roots-api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  // Get API welcome message\r\n  @Get()\r\n  getData() {\r\n    return this.appService.getData();\r\n  }\r\n}\r\n","import { MailerModule } from '@nestjs-modules/mailer';\r\nimport { Module } from '@nestjs/common';\r\nimport { APP_GUARD } from '@nestjs/core';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { environment } from '../environments/environment';\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\r\nimport { EventModule } from './event/event.module';\r\nimport { LogModule } from './log/log.module';\r\nimport { OrganizationModule } from './organization/organization.module';\r\nimport { TagModule } from './tag/tag.module';\r\nimport { UserModule } from './user/user.module';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forRoot(environment.API_URL),\r\n    UserModule,\r\n    OrganizationModule,\r\n    EventModule,\r\n    AuthModule,\r\n    TagModule,\r\n    LogModule,\r\n    MailerModule.forRoot({\r\n      transport: {\r\n        host: 'smtp.sendgrid.net',\r\n        auth: {\r\n          user: 'apikey',\r\n          pass: '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',\r\n        },\r\n        tls: {\r\n          rejectUnauthorized: false,\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [\r\n    {\r\n      provide: APP_GUARD,\r\n      useClass: JwtAuthGuard,\r\n    },\r\n    AppService,\r\n  ],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  // Get API welcome message\r\n  getData(): { message: string } {\r\n    return { message: 'Welkom bij de API van Roots!' };\r\n  }\r\n}\r\n","import { Body, Controller, Post, Request, UseGuards } from '@nestjs/common';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { UserDto } from '../user/user.dto';\r\nimport { Public } from './auth.module';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Controller()\r\nexport class AuthController {\r\n  // Inject all dependencies\r\n  constructor(private readonly authService: AuthService) {}\r\n\r\n  // Login user\r\n  @Public()\r\n  @UseGuards(AuthGuard('local'))\r\n  @Post('auth/login')\r\n  async login(@Request() req) {\r\n    return this.authService.login(req.body);\r\n  }\r\n\r\n  // Register user/organization\r\n  @Public()\r\n  @Post('auth/register')\r\n  async register(@Body() UserDto: UserDto) {\r\n    return this.authService.register(UserDto);\r\n  }\r\n\r\n  // Verify user\r\n  @Public()\r\n  @Post('auth/verify')\r\n  async verify(@Body() body) {\r\n    return this.authService.verify(body);\r\n  }\r\n\r\n  // Resend verification mail\r\n  @Public()\r\n  @Post('auth/resend')\r\n  async resend(@Body() body) {\r\n    return this.authService.resendVerificationMail(body.emailAddress);\r\n  }\r\n\r\n  // Send reset password mail\r\n  @Public()\r\n  @Post('auth/forgot_password')\r\n  async forgotPassword(@Body() body) {\r\n    return this.authService.forgotPasswordMail(body.emailAddress);\r\n  }\r\n\r\n  // Reset password\r\n  @Public()\r\n  @Post('auth/reset_password')\r\n  async resetPassword(@Body() body) {\r\n    return this.authService.resetPassword(body.tokenId, body.password);\r\n  }\r\n}\r\n","export const IS_PUBLIC_KEY = 'isPublic';\r\nexport const Public = () => SetMetadata(IS_PUBLIC_KEY, true);\r\n\r\nimport { Module, SetMetadata } from '@nestjs/common';\r\nimport { JwtModule } from '@nestjs/jwt';\r\nimport { PassportModule } from '@nestjs/passport';\r\nimport { MailModule } from '../providers/email/email.module';\r\nimport { TokenModule } from '../token/token.module';\r\nimport { UserModule } from '../user/user.module';\r\nimport { AuthController } from './auth.controller';\r\nimport { AuthService } from './auth.service';\r\nimport { jwtConstants } from './constants';\r\nimport { JwtStrategy } from './jwt.strategy';\r\nimport { LocalStrategy } from './local.strategy';\r\n\r\n@Module({\r\n  imports: [\r\n    UserModule,\r\n    PassportModule,\r\n    JwtModule.register({\r\n      secret: jwtConstants.secret,\r\n      signOptions: { expiresIn: '2d' },\r\n    }),\r\n    MailModule,\r\n    TokenModule,\r\n  ],\r\n  providers: [AuthService, LocalStrategy, JwtStrategy],\r\n  exports: [AuthService],\r\n  controllers: [AuthController],\r\n})\r\nexport class AuthModule {}\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport { MailService } from '../providers/email/email.service';\r\nimport { ParseObjectIdPipe } from '../shared/pipes/ParseObjectIdPipe';\r\nimport { Token } from '../token/token.schema';\r\nimport { TokenService } from '../token/token.service';\r\nimport { UserDto } from '../user/user.dto';\r\nimport { User } from '../user/user.schema';\r\nimport { UserService } from '../user/user.service';\r\nimport { jwtConstants } from './constants';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    private userService: UserService,\r\n    private jwtService: JwtService,\r\n    private mailService: MailService,\r\n    private tokenService: TokenService\r\n  ) {}\r\n\r\n  // Login user\r\n  async login(user: any) {\r\n    const payload = { username: user.username || user.emailAddress };\r\n\r\n    const loggedInUser = await this.userService.findByEmailAddress(\r\n      payload.username\r\n    );\r\n\r\n    return {\r\n      _id: loggedInUser._id,\r\n      firstname: loggedInUser.firstname,\r\n      lastname: loggedInUser.lastname,\r\n      emailAddress: loggedInUser.emailAddress,\r\n      isVerified: loggedInUser.isVerified,\r\n      organization: loggedInUser.organization,\r\n      access_token: this.jwtService.sign(payload, jwtConstants),\r\n    };\r\n  }\r\n\r\n  // Register new user/organization + create token + send verify mail\r\n  async register(UserDto: UserDto) {\r\n    const user: User = await this.userService.create(UserDto);\r\n\r\n    const token: Token = await this.tokenService.create(\r\n      'verification',\r\n      user._id.toString()\r\n    );\r\n\r\n    await this.mailService.SendVerificationMail(\r\n      user.emailAddress,\r\n      user.firstname,\r\n      token.verificationCode\r\n    );\r\n\r\n    return user;\r\n  }\r\n\r\n  // Check if user is active\r\n  async validateUser(username: string, pass: string): Promise<any> {\r\n    const user: User = await this.userService.findByEmailAddress(username);\r\n    if (user && (await bcrypt.compareSync(pass, user.password))) {\r\n      if (user.isActive === false) {\r\n        throw new HttpException(\r\n          `Jouw account is gedeactiveerd!`,\r\n          HttpStatus.BAD_REQUEST\r\n        );\r\n      }\r\n\r\n      if (user.isVerified) {\r\n        await this.userService.setLastLoginTimeStamp(user._id.toString());\r\n      }\r\n      return user;\r\n    }\r\n\r\n    throw new HttpException(\r\n      `Incorrecte inloggegevens!`,\r\n      HttpStatus.BAD_REQUEST\r\n    );\r\n  }\r\n\r\n  // Verify user\r\n  async verify(req: any) {\r\n    //check if object id is valid\r\n    if (!ParseObjectIdPipe.isValidObjectId(req.userId)) {\r\n      throw new HttpException('Id is niet geldig!', HttpStatus.BAD_REQUEST);\r\n    }\r\n\r\n    //check if user exists (validation is elsewhere)\r\n    const user = await this.userService.getById(req.userId);\r\n\r\n    //retrieve existing token\r\n    const token = await this.tokenService.getByUserId(\r\n      req.userId,\r\n      'verification'\r\n    );\r\n\r\n    //check if token is correct + not expired\r\n    if (\r\n      token.verificationCode === req.verificationCode &&\r\n      token.expirationDate > new Date()\r\n    ) {\r\n      //delete used token\r\n      await this.tokenService.delete(req.userId, 'verification');\r\n\r\n      //change isVerified to true\r\n      await this.userService.verifyAccount(req.userId);\r\n\r\n      //set first login timestamp\r\n      await this.userService.setLastLoginTimeStamp(req.userId);\r\n\r\n      //login automatically\r\n      return await this.login({\r\n        username: user.emailAddress,\r\n        password: user.password,\r\n      });\r\n    } else {\r\n      throw new HttpException(\r\n        'De verificatiecode is ongeldig!',\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n  }\r\n\r\n  // Resend verification mail\r\n  async resendVerificationMail(emailAddress: string) {\r\n    //retrieve user + check if exists\r\n    const user = await this.userService.findByEmailAddress(emailAddress);\r\n\r\n    //delete previous token\r\n    await this.tokenService.delete(user._id.toString(), 'verification');\r\n\r\n    //create new token\r\n    const token = await this.tokenService.create(\r\n      'verification',\r\n      user._id.toString()\r\n    );\r\n\r\n    //send email with new verificationcode\r\n    await this.mailService.SendVerificationMail(\r\n      user.emailAddress,\r\n      user.firstname,\r\n      token.verificationCode\r\n    );\r\n\r\n    return {\r\n      status: 200,\r\n      message: 'Verification Email has been sent!',\r\n    };\r\n  }\r\n\r\n  // Send forgot password mail\r\n  async forgotPasswordMail(emailAddress: string) {\r\n    //retrieve user + check if exists\r\n    const user = await this.userService.findByEmailAddress(emailAddress);\r\n\r\n    //delete previous tokens (if there are any)\r\n    await this.tokenService.delete(user._id.toString(), 'password_reset');\r\n\r\n    //create new token\r\n    const token = await this.tokenService.create(\r\n      'password_reset',\r\n      user._id.toString()\r\n    );\r\n\r\n    //send email with link for password reset\r\n    await this.mailService.SendPasswordResetMail(\r\n      user.emailAddress,\r\n      user.firstname,\r\n      token._id.toString()\r\n    );\r\n\r\n    return {\r\n      status: 200,\r\n      message: 'Reset Password Email has been sent!',\r\n    };\r\n  }\r\n\r\n  // Reset password\r\n  async resetPassword(tokenId: string, password: string) {\r\n    //retrieve user + check if exists\r\n    const token = await this.tokenService.getById(tokenId);\r\n\r\n    //delete previous tokens (if there are any)\r\n    await this.tokenService.delete(token.userId.toString(), 'password_reset');\r\n\r\n    if (token.expirationDate > new Date()) {\r\n      //reset password\r\n      await this.userService.setPassword(token.userId.toString(), password);\r\n\r\n      return {\r\n        status: 200,\r\n        message: 'Password has been reset!',\r\n      };\r\n    } else {\r\n      throw new HttpException('Token is ongeldig!', HttpStatus.BAD_REQUEST);\r\n    }\r\n  }\r\n}\r\n","export const jwtConstants = {\r\n  secret: 'secretKey',\r\n};\r\n","import { ExecutionContext, Injectable } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { AuthGuard } from '@nestjs/passport';\r\nimport { IS_PUBLIC_KEY } from './auth.module';\r\n\r\n@Injectable()\r\nexport class JwtAuthGuard extends AuthGuard('jwt') {\r\n  constructor(private reflector: Reflector) {\r\n    super();\r\n  }\r\n\r\n  // Create Guard to check if user is authenticated\r\n  canActivate(context: ExecutionContext) {\r\n    const isPublic = this.reflector.getAllAndOverride<boolean>(IS_PUBLIC_KEY, [\r\n      context.getHandler(),\r\n      context.getClass(),\r\n    ]);\r\n    if (isPublic) {\r\n      return true;\r\n    }\r\n    return super.canActivate(context);\r\n  }\r\n}\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { ExtractJwt, Strategy } from 'passport-jwt';\r\nimport { UserService } from '../user/user.service';\r\nimport { jwtConstants } from './constants';\r\n\r\n@Injectable()\r\nexport class JwtStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private readonly userService: UserService) {\r\n    super({\r\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n      ignoreExpiration: false,\r\n      secretOrKey: jwtConstants.secret,\r\n    });\r\n  }\r\n\r\n  // Check if user JWT token is valid\r\n  async validate(payload: any) {\r\n    const user = await this.userService.findByEmailAddress(payload.username);\r\n\r\n    if (user) {\r\n      return user;\r\n    } else {\r\n      throw new HttpException('Login is verlopen!', HttpStatus.UNAUTHORIZED);\r\n    }\r\n  }\r\n}\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { Strategy } from 'passport-local';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class LocalStrategy extends PassportStrategy(Strategy) {\r\n  constructor(private authService: AuthService) {\r\n    super();\r\n  }\r\n\r\n  // Check if user exists\r\n  async validate(username: string, password: string): Promise<any> {\r\n    const user = await this.authService.validateUser(username, password);\r\n\r\n    if (!user) {\r\n      throw new HttpException(\r\n        `Er is geen gebruiker gevonden met het opgegeven e-mailadres!`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n    }\r\n\r\n    return user;\r\n  }\r\n}\r\n","import {\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  HttpException,\r\n  HttpStatus,\r\n  Logger,\r\n  Param,\r\n  Post,\r\n  Put,\r\n  Query,\r\n} from '@nestjs/common';\r\nimport { Public } from '../auth/auth.module';\r\nimport { EventDto } from './event.dto';\r\nimport { Event } from './event.schema';\r\nimport { EventService } from './event.service';\r\n\r\n@Controller('events')\r\nexport class EventController {\r\n  // Inject all dependencies\r\n  constructor(private readonly eventService: EventService) {}\r\n\r\n  // Get all events\r\n  @Public()\r\n  @Get('/organization/:id')\r\n  async getAllEvents(@Param('id') organizationId: string): Promise<Event[]> {\r\n    Logger.log('Retrieving all events (READ)');\r\n\r\n    return await this.eventService.getAll(organizationId);\r\n  }\r\n\r\n  // Get an amount of events to show on page\r\n  @Public()\r\n  @Get(':id/filter')\r\n  async getEventsPerPage(\r\n    @Param('id') organizationId: string,\r\n    @Query() query\r\n  ): Promise<Event[]> {\r\n    Logger.log('Retrieving events with filter (READ)');\r\n    return await this.eventService.getPerPage(query, organizationId);\r\n  }\r\n\r\n  // Get event by ID\r\n  @Public()\r\n  @Get(':id')\r\n  async getEventById(@Param('id') eventId: string): Promise<Event> {\r\n    try {\r\n      Logger.log(`Retrieve event with id: ${eventId} (READ)`);\r\n\r\n      return await this.eventService.getById(eventId);\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  // Create new event\r\n  @Public()\r\n  @Post('new/:companyId')\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  async createEvent(\r\n    @Param('companyId') companyId: string,\r\n    @Body() eventDto: EventDto\r\n  ): Promise<Object> {\r\n    try {\r\n      Logger.log(`Create event (POST)`);\r\n\r\n      const event = await this.eventService.create(companyId, eventDto);\r\n\r\n      return {\r\n        status: 201,\r\n        message: 'De gebeurtenis is succesvol aangemaakt!',\r\n      };\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  // Update event\r\n  @Public()\r\n  @Put(':companyId/:eventId/edit')\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  async updateEvent(\r\n    @Param('companyId') companyId: string,\r\n    @Param('eventId') eventId: string,\r\n    @Body() eventDto: EventDto\r\n  ): Promise<Object> {\r\n    try {\r\n      Logger.log(`Update event ${eventId} from company ${companyId} (PUT)`);\r\n\r\n      const event = await this.eventService.update(eventId, eventDto);\r\n\r\n      return {\r\n        status: 200,\r\n        message: 'De gebeurtenis is succesvol aangepast!',\r\n      };\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_MODIFIED);\r\n    }\r\n  }\r\n\r\n  // Archive/Dearchive event\r\n  @Public()\r\n  @Put(':companyId/:eventId/archive')\r\n  async archiveEvent(\r\n    @Param('companyId') companyId: string,\r\n    @Param('eventId') eventId: string,\r\n    @Query('isActive') isActive: boolean\r\n  ): Promise<Event> {\r\n    try {\r\n      Logger.log(\r\n        isActive\r\n          ? 'Archiveren'\r\n          : 'Dearchiveren' + ` event  from ${eventId} from company ${companyId}`\r\n      );\r\n\r\n      return await this.eventService.archive(eventId, isActive);\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_MODIFIED);\r\n    }\r\n  }\r\n}\r\n","import { IEvent } from '@roots/data';\r\nimport { ArrayNotEmpty, IsBoolean, isBoolean, IsDefined, IsNotEmpty, IsString, MaxLength } from 'class-validator';\r\nimport { Types } from 'mongoose';\r\nimport { Tag } from '../tag/tag.schema';\r\n\r\nexport class EventDto implements IEvent {\r\n  @IsString({ message: 'Titel moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Titel is verplicht!' })\r\n  @MaxLength(75, { message: 'Titel mag maximaal 75 karakters bevatten!' })\r\n  title: string;\r\n\r\n  @IsString({ message: 'Beschrijving moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Beschrijving is verplicht!' })\r\n  @MaxLength(150, { message: 'Beschrijving mag maximaal 150 karakters bevatten!' })\r\n  description: string;\r\n\r\n  @IsString({ message: 'Inhoud moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Inhoud is verplicht!' })\r\n  content: string;\r\n\r\n  @IsDefined({ message: 'Gebeurtenisdatum is verplicht!' })\r\n  eventDate: Date;\r\n\r\n  tags: [Types.ObjectId];\r\n\r\n  @IsBoolean({message: 'IsActive moet van het type boolean'})\r\n  isActive:boolean;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Organization, OrganizationSchema } from '../organization/organization.schema';\r\nimport { EventController } from './event.controller';\r\nimport { EventSchema } from './event.schema';\r\nimport { EventService } from './event.service';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([\r\n      { name: Event.name, schema: EventSchema },\r\n      { name: Organization.name, schema: OrganizationSchema }]),\r\n  ],\r\n  providers: [EventService],\r\n  controllers: [EventController],\r\n  exports: [EventService],\r\n})\r\nexport class EventModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { IEvent } from '@roots/data';\r\nimport { Types } from 'mongoose';\r\n\r\nexport type EventDocument = Event & Document;\r\n\r\n@Schema()\r\nexport class Event implements IEvent {\r\n  @Prop({\r\n    required: [true, 'Titel is verplicht!'],\r\n    maxLength: [75, 'Titel mag maximaal 75 karakters bevatten!']\r\n  })\r\n  title: string;\r\n\r\n  @Prop({\r\n    required: [true, 'Beschrijving is verplicht!'],\r\n    maxLength: [150, 'Beschrijving mag maximaal 150 karakters bevatten!']\r\n  })\r\n  description: string;\r\n\r\n  @Prop({\r\n    required: [true, 'Inhoud is verplicht!']\r\n  })\r\n  content: string;\r\n\r\n  @Prop({\r\n    required: [true, 'Gebeurtenisdatum is verplicht!']\r\n  })\r\n  eventDate: Date;\r\n\r\n  @Prop({\r\n    default: [],\r\n    type: [Types.ObjectId]\r\n  })\r\n  tags: [Types.ObjectId]\r\n\r\n  @Prop({\r\n    default:true\r\n  })\r\n  isActive: boolean;\r\n}\r\n\r\nexport const EventSchema = SchemaFactory.createForClass(Event);\r\n","import { HttpException, HttpStatus, Injectable, Logger } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport mongoose, { Model, Types } from 'mongoose';\r\nimport {\r\n  Organization,\r\n  OrganizationDocument,\r\n} from '../organization/organization.schema';\r\nimport { EventDto } from './event.dto';\r\nimport { Event, EventDocument } from './event.schema';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    @InjectModel(Event.name) private eventModel: Model<EventDocument>,\r\n    @InjectModel(Organization.name)\r\n    private organizationModel: Model<OrganizationDocument>\r\n  ) {}\r\n\r\n  // Get all events\r\n  async getAll(organizationId: string): Promise<Event[]> {\r\n    const events = await this.organizationModel.aggregate([\r\n      {\r\n        $match: {\r\n          _id: new Types.ObjectId(organizationId),\r\n        },\r\n      },\r\n      {\r\n        $unwind: {\r\n          path: '$events',\r\n        },\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: 'events',\r\n          localField: 'events',\r\n          foreignField: '_id',\r\n          as: 'events',\r\n        },\r\n      },\r\n      {\r\n        $sort: {\r\n          'events.eventDate': -1,\r\n        },\r\n      },\r\n      {\r\n        $group: {\r\n          _id: null,\r\n          events: {\r\n            $push: {\r\n              _id: {\r\n                $first: '$events._id',\r\n              },\r\n              title: {\r\n                $first: '$events.title',\r\n              },\r\n              description: {\r\n                $first: '$events.description',\r\n              },\r\n              eventDate: {\r\n                $first: '$events.eventDate',\r\n              },\r\n              isActive: {\r\n                $first: '$events.isActive',\r\n              },\r\n              tags: {\r\n                $first: '$events.tags',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        $project: {\r\n          _id: 0,\r\n          events: 1,\r\n        },\r\n      },\r\n    ]);\r\n\r\n    return events[0]?.events;\r\n  }\r\n\r\n  // Get amount of events per page + filter\r\n  async getPerPage(query: any, organizationId: string): Promise<Event[]> {\r\n    const events = await this.organizationModel.aggregate([\r\n      {\r\n        $match: {\r\n          _id: new Types.ObjectId(organizationId),\r\n        },\r\n      },\r\n      {\r\n        $unwind: {\r\n          path: '$events',\r\n        },\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: 'events',\r\n          localField: 'events',\r\n          foreignField: '_id',\r\n          as: 'events',\r\n        },\r\n      },\r\n      {\r\n        $sort: {\r\n          'events.eventDate': -1,\r\n        },\r\n      },\r\n      {\r\n        $group: {\r\n          _id: null,\r\n          events: {\r\n            $push: {\r\n              _id: {\r\n                $first: '$events._id',\r\n              },\r\n              title: {\r\n                $first: '$events.title',\r\n              },\r\n              description: {\r\n                $first: '$events.description',\r\n              },\r\n              eventDate: {\r\n                $first: '$events.eventDate',\r\n              },\r\n              isActive: {\r\n                $first: '$events.isActive',\r\n              },\r\n              tags: {\r\n                $first: '$events.tags',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        $project: {\r\n          _id: 0,\r\n          events: 1,\r\n        },\r\n      },\r\n    ]);\r\n\r\n    if (\r\n      query.old_records &&\r\n      query.new_records &&\r\n      query.show_archived_events === 'true'\r\n    ) {\r\n      return events[0]?.events.slice(\r\n        Number(query.old_records),\r\n        Number(query.new_records) + Number(query.old_records)\r\n      );\r\n    } else if (\r\n      query.old_records &&\r\n      query.new_records &&\r\n      query.show_archived_events === 'false'\r\n    ) {\r\n      const activeEvents: any[] = [];\r\n      events[0]?.events?.forEach((event) => {\r\n        if (event.isActive) {\r\n          activeEvents.push(event);\r\n        }\r\n      });\r\n      return activeEvents.slice(\r\n        Number(query.old_records),\r\n        Number(query.new_records) + Number(query.old_records)\r\n      );\r\n    } else if (query.term && query.show_archived_events === 'true') {\r\n      const matchingEvents: any[] = [];\r\n      events[0]?.events?.forEach((event) => {\r\n        if (event.title.includes(query.term)) {\r\n          matchingEvents.push(event);\r\n        }\r\n      });\r\n      return matchingEvents;\r\n    } else if (query.term && query.show_archived_events === 'false') {\r\n      const matchingEvents: any[] = [];\r\n      events[0]?.events?.forEach((event) => {\r\n        if (event.title.includes(query.term) && event.isActive) {\r\n          matchingEvents.push(event);\r\n        }\r\n      });\r\n      return matchingEvents;\r\n    }\r\n  }\r\n\r\n  // Get event by ID\r\n  async getById(id: string): Promise<Event> {\r\n    const event = await this.organizationModel.aggregate([\r\n      {\r\n        $unwind: {\r\n          path: '$events',\r\n        },\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: 'events',\r\n          localField: 'events',\r\n          foreignField: '_id',\r\n          as: 'events',\r\n        },\r\n      },\r\n      {\r\n        $match: {\r\n          'events._id': new mongoose.Types.ObjectId(id),\r\n        },\r\n      },\r\n      {\r\n        $project: {\r\n          _id: 0,\r\n          events: 1,\r\n        },\r\n      },\r\n    ]);\r\n\r\n    if (event.length === 0)\r\n      throw new HttpException(\r\n        `Deze gebeurtenis bestaat niet!`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n    return event[0]?.events[0];\r\n  }\r\n\r\n  // Create new organization\r\n  async create(organizationId: string, eventDto: EventDto): Promise<any> {\r\n    const event = await this.eventModel.create(eventDto);\r\n\r\n    const updatedOrganizationEvents =\r\n      await this.organizationModel.findOneAndUpdate(\r\n        { _id: organizationId },\r\n        { $push: { events: event._id } },\r\n        {\r\n          new: true,\r\n          runValidators: true,\r\n        }\r\n      );\r\n\r\n    if (!updatedOrganizationEvents)\r\n      throw new HttpException(\r\n        `Dit bedrijf bestaat niet!`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    return updatedOrganizationEvents;\r\n  }\r\n\r\n  // Update organization\r\n  async update(eventId: string, eventDto: EventDto): Promise<any> {\r\n    const updatedEventFromOrganization = await this.eventModel.findOneAndUpdate(\r\n      { _id: eventId },\r\n      {\r\n        $set: {\r\n          title: eventDto?.title,\r\n          description: eventDto?.description,\r\n          content: eventDto?.content,\r\n          tags: eventDto?.tags,\r\n          eventDate: eventDto?.eventDate,\r\n        },\r\n      },\r\n      {\r\n        new: true,\r\n        runValidators: true,\r\n      }\r\n    );\r\n\r\n    if (!updatedEventFromOrganization)\r\n      throw new HttpException(\r\n        `Deze gebeurtenis bestaat niet!`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    return updatedEventFromOrganization;\r\n  }\r\n\r\n  // Archive/Dearchive event\r\n  async archive(eventId: string, isActive: boolean): Promise<any> {\r\n    const updatedArchive = await this.eventModel.findOneAndUpdate(\r\n      { _id: new Types.ObjectId(eventId) },\r\n      {\r\n        $set: {\r\n          isActive: isActive,\r\n        },\r\n      },\r\n      {\r\n        new: true,\r\n        runValidators: true,\r\n      }\r\n    );\r\n\r\n    if (!updatedArchive)\r\n      throw new HttpException(\r\n        `Deze gebeurtenis bestaat niet!`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    return await this.getById(eventId);\r\n  }\r\n}\r\n","import { Body, Controller, Get, Logger, Param, Post, Put } from '@nestjs/common';\r\nimport { Public } from '../auth/auth.module';\r\nimport { ParseObjectIdPipe } from '../shared/pipes/ParseObjectIdPipe';\r\nimport { LogDTO } from './log.dto';\r\nimport { Log } from './log.schema';\r\nimport { LogService } from './log.service';\r\n\r\n\r\n@Controller('log')\r\nexport class LogController {\r\n  constructor(private readonly logService: LogService) { }\r\n\r\n  @Public()\r\n  @Get(':organizationId')\r\n  async getAll(@Param('organizationId') organizationId: string): Promise<Log[]> {\r\n    Logger.log(`Retrieve logs (READ)`);\r\n\r\n    return await this.logService.getAll(organizationId);\r\n  }\r\n\r\n  @Public()\r\n  @Put(':organizationId')     \r\n  async createLog(@Param('organizationId') organizationId: string, @Body() logDto:LogDTO): Promise<Log> {\r\n    return await this.logService.create(organizationId,logDto);\r\n  }\r\n}    ","import { ILog, ITag } from '@roots/data'\r\nimport { IsDefined, IsNotEmpty, IsString, MaxLength } from 'class-validator';\r\n\r\n\r\nexport class LogDTO implements ILog {\r\n    @IsString({ message: 'Editor moet van het type string zijn!' })\r\n    editor: string;\r\n    @IsString({ message: 'Action moet van het type string zijn!' })\r\n    action: string;\r\n    @IsString({ message: 'Object moet van het type string zijn!' })\r\n    object: string;\r\n    logStamp: Date;\r\n    \r\n}","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Organization } from '@roots/data';\r\nimport { LogController } from '../log/log.controller';\r\nimport { LogService } from '../log/log.service';\r\nimport { OrganizationSchema } from '../organization/organization.schema';\r\nimport { Log, LogSchema } from './log.schema';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([{ name: Log.name, schema: LogSchema }, {\r\n      name: Organization.name, schema: OrganizationSchema\r\n    }]),\r\n  ],\r\n  providers: [LogService],\r\n  controllers: [LogController],\r\n  exports: [MongooseModule, LogService],\r\n})\r\nexport class LogModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { ILog, IOrganization } from '@roots/data';\r\nimport { IsDefined, IsString } from 'class-validator';\r\n\r\nexport type LogDocument = Log & Document;\r\n\r\n@Schema()\r\nexport class Log implements ILog {\r\n    @IsString({ message: 'Editor moet van het type string zijn!' })\r\n    @Prop()\r\n    editor: string;\r\n    \r\n    @IsString({ message: 'Action moet van het type string zijn!' })\r\n    @Prop()\r\n    action: string;\r\n    \r\n    @IsString({ message: 'Object moet van het type string zijn!' })\r\n    @Prop()\r\n    object: string;\r\n    \r\n    @Prop({default: new Date()})\r\n    logStamp: Date;\r\n  \r\n}\r\n\r\nexport const LogSchema = SchemaFactory.createForClass(Log);\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Organization } from '@roots/data';\r\nimport { Model } from 'mongoose';\r\nimport { OrganizationDocument } from '../organization/organization.schema';\r\nimport { LogDTO } from './log.dto';\r\nimport { Log, LogDocument } from './log.schema';\r\n\r\n@Injectable()\r\nexport class LogService {\r\n  constructor(\r\n    @InjectModel(Log.name)\r\n    private LogModel: Model<LogDocument>,\r\n    @InjectModel(Organization.name)\r\n    private organizationModel: Model<OrganizationDocument>\r\n  ) {}\r\n\r\n  async getAll(organizationId: string): Promise<Log[]> {\r\n    return await this.organizationModel.findOne(\r\n      { _id: organizationId },\r\n      { logs: 1 }\r\n    );\r\n  }\r\n\r\n  async create(organizationId: string, logDto: LogDTO): Promise<Log> {\r\n    return await this.organizationModel.findOneAndUpdate(\r\n      { _id: organizationId },\r\n      {\r\n        $push: {\r\n          logs: logDto,\r\n        },\r\n      },\r\n      {\r\n        new: true,\r\n        runValidators: true,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Body, Controller, Get, Logger, Param, Post } from '@nestjs/common';\r\nimport { Public } from '../auth/auth.module';\r\nimport { ParseObjectIdPipe } from '../shared/pipes/ParseObjectIdPipe';\r\nimport { CreateOrganizationDTO } from './organization.dto';\r\nimport { Organization } from './organization.schema';\r\nimport { OrganizationService } from './organization.service';\r\n\r\n@Controller()\r\nexport class OrganizationController {\r\n  // Inject all dependencies\r\n  constructor(private readonly organizationService: OrganizationService) { }\r\n\r\n  // Get all organizations\r\n  @Public()\r\n  @Get('organizations')\r\n  async getAll(): Promise<Organization[]> {\r\n    Logger.log(`Retrieve organization (READ)`);\r\n\r\n    return await this.organizationService.getAll();\r\n  }\r\n\r\n  // Get organization by ID\r\n  @Public()\r\n  @Get('organizations/:id')\r\n  async getById(@Param('id', ParseObjectIdPipe) id: string): Promise<Organization> {\r\n    Logger.log(`Retrieve organization with id: ${id} (READ)`);\r\n\r\n    return await this.organizationService.getById(id);\r\n  }\r\n\r\n  // Create new organization\r\n  @Public()\r\n  @Post('organizations')     \r\n  async createCommunity(@Body() createOrganizationDto: CreateOrganizationDTO): Promise<Organization> {\r\n    return await this.organizationService.create(createOrganizationDto);\r\n  }\r\n}    ","import { Optional } from '@nestjs/common';\r\nimport { IsDefined, IsString } from 'class-validator';\r\n\r\nexport class CreateOrganizationDTO {\r\n    @IsString({ message: 'Naam moet van het type string zijn!' })\r\n    @IsDefined({ message: 'Naam is verplicht!' })\r\n    name: string;\r\n\r\n    @IsString({ message: 'Email domein moet van het type string zijn!' })\r\n    @IsDefined({ message: 'Email domein is verplicht!' })\r\n    emailDomain: string;\r\n}\r\n\r\nexport class UpdateOrganizationDTO {\r\n    @Optional()\r\n    @IsString({ message: 'Naam moet van het type string zijn!' })\r\n    @IsDefined({ message: 'Naam is verplicht!' })\r\n    name: string;\r\n\r\n    @Optional()\r\n    @IsString({ message: 'Email domein moet van het type string zijn!' })\r\n    @IsDefined({ message: 'Email domein is verplicht!' })\r\n    emailDomain: string;\r\n}","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Log } from '@roots/data';\r\nimport { LogSchema } from '../log/log.schema';\r\nimport { OrganizationController } from './organization.controller';\r\nimport { Organization, OrganizationSchema } from './organization.schema';\r\nimport { OrganizationService } from './organization.service';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([{ name: Organization.name, schema: OrganizationSchema }]),\r\n  ],\r\n  providers: [OrganizationService],\r\n  controllers: [OrganizationController],\r\n  exports: [MongooseModule, OrganizationService],\r\n})\r\nexport class OrganizationModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { IOrganization } from '@roots/data';\r\nimport { IsDefined, IsString } from 'class-validator';\r\nimport { Types } from 'mongoose';\r\nimport { LogSchema } from '../log/log.schema';\r\n\r\nexport type OrganizationDocument = Organization & Document;\r\n\r\n@Schema()\r\nexport class Organization implements IOrganization {\r\n  \r\n  @IsString({ message: 'Naam moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Naam is verplicht!' })\r\n  @Prop()\r\n  name: string;\r\n\r\n  @IsString({ message: 'Email domein moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Email domein is verplicht!' })\r\n  @Prop()\r\n  emailDomain: string;\r\n\r\n  @Prop({\r\n    default: [],\r\n    type:[Types.ObjectId]\r\n  })\r\n  events: [Types.ObjectId];\r\n\r\n  @Prop({\r\n    default: [],\r\n    type: [Types.ObjectId]\r\n  })\r\n  tags: [Types.ObjectId]\r\n\r\n  @Prop({\r\n    default:[],\r\n    type:[LogSchema]\r\n  })\r\n  logs: []\r\n}\r\n\r\nexport const OrganizationSchema = SchemaFactory.createForClass(Organization);\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model } from 'mongoose';\r\nimport { CreateOrganizationDTO } from './organization.dto';\r\nimport { Organization, OrganizationDocument } from './organization.schema';\r\n\r\n@Injectable()\r\nexport class OrganizationService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    @InjectModel(Organization.name)\r\n    private organizationModel: Model<OrganizationDocument>\r\n  ) {}\r\n\r\n  // Get organization by email domain\r\n  async getByEmailDomain(\r\n    emailDomain: string\r\n  ): Promise<Organization | undefined> {\r\n    const organization = await this.organizationModel.findOne({ emailDomain });\r\n\r\n    if (!organization)\r\n      throw new HttpException(\r\n        'Er bestaat geen organisatie met het opgegeven email domein!',\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    return organization;\r\n  }\r\n\r\n  // Get organization by ID\r\n  async getById(_id: string): Promise<Organization> {\r\n    const organization = await this.organizationModel.findOne({ _id });\r\n\r\n    if (!organization)\r\n      throw new HttpException(\r\n        'Organisatie bestaat niet!',\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    return organization;\r\n  }\r\n\r\n  // Get all organizations\r\n  async getAll(): Promise<Organization[]> {\r\n    return await this.organizationModel.find();\r\n  }\r\n\r\n  // Create new organization\r\n  async create(\r\n    createOrganizationDTO: CreateOrganizationDTO\r\n  ): Promise<Organization> {\r\n    await this.validate(createOrganizationDTO);\r\n\r\n    const newOrganization = new this.organizationModel({\r\n      ...createOrganizationDTO,\r\n    });\r\n\r\n    return await this.organizationModel.create(newOrganization);\r\n  }\r\n\r\n  // Check if organization already exists\r\n  async validate(organization: any): Promise<void> {\r\n    if (\r\n      (await this.organizationModel.find({ name: organization.name })).length > 0\r\n    ) {\r\n      throw new HttpException(\r\n        `Er bestaat al een bedrijf met de opgegeven naam!`,\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n\r\n    if (\r\n      (await this.organizationModel.find({ emailDomain: organization.emailDomain })).length > 0\r\n    ) {\r\n      throw new HttpException(\r\n        `Er bestaat al een bedrijf met het opgegeven email domein!`,\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { MailService } from './email.service';\r\n\r\n@Module({\r\n  providers: [MailService],\r\n  exports: [MailService],\r\n})\r\nexport class MailModule {}\r\n","import { MailerService } from '@nestjs-modules/mailer';\r\nimport { Injectable } from '@nestjs/common';\r\n// eslint-disable-next-line @nrwl/nx/enforce-module-boundaries\r\nimport { environment } from 'apps/roots-api/src/environments/environment';\r\nimport { Public } from '../../auth/auth.module';\r\n\r\n@Injectable()\r\nexport class MailService {\r\n  // Inject all dependencies\r\n  constructor(private mailService: MailerService) {}\r\n\r\n  // Send verification mail\r\n  @Public()\r\n  async SendVerificationMail(\r\n    email: string,\r\n    receiverName: string,\r\n    verificationCode: string\r\n  ) {\r\n    await this.mailService.sendMail({\r\n      to: email,\r\n      from: environment.EMAIL_SENDINGEMAIL,\r\n      subject: 'Roots | E-mailverificatie',\r\n      html: `<div style=\"font-family: Helvetica, sans-serif\"> <h1 style=\"font-weight: bold\">Welkom bij Roots, ${receiverName}!</h1> <p>Gebruik de onderstaande code om je account te verifiëren.</p> <p style=\"font-size:24px; color: #1353d9; font-weight:900;\">${verificationCode}</p> <p style=\"font-size: 11px; font-style: italic; margin-top: 15px\">De code is voor de volgende 24 uur geldig.</p> <p style=\"font-size: 14px; margin-top: 25px\">Groetjes het Roots-team</p> </div>`,\r\n    });\r\n  }\r\n\r\n  // Send reset password mail\r\n  @Public()\r\n  async SendPasswordResetMail(\r\n    email: string,\r\n    receiverName: string,\r\n    tokenId: string\r\n  ) {\r\n    const link = environment.APPLICATION_URL + '/password_reset/' + tokenId;\r\n\r\n    await this.mailService.sendMail({\r\n      to: email,\r\n      from: environment.EMAIL_SENDINGEMAIL,\r\n      subject: 'Roots | Wachtwoord resetten',\r\n      html: `<div style=\"font-family: Helvetica, sans-serif\"> <h1 style=\"font-weight: bold\">Hallo ${receiverName}!</h1> <p style=\"padding-bottom:15px;\">Druk op de onderstaande knop om je wachtwoord opnieuw in te stellen.</p> <a href=\"${link}\" style=\"color: white; background: #1353d9; text-decoration: none; padding: 10px 28px;\"> Wachtwoord instellen </a> <p style=\"font-size: 11px; font-style: italic; margin-top: 30px\">De code is voor de volgende 24 uur geldig.</p> <p style=\"font-size: 14px; margin-top: 25px\">Groetjes het Roots-team</p></div>`,\r\n    });\r\n  }\r\n}\r\n","import { BadRequestException } from '@nestjs/common';\r\n\r\nexport class ValidationException extends BadRequestException {\r\n  constructor(public validationErrors: string[]) {\r\n    super();\r\n  }\r\n}\r\n","import { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\r\nimport { ValidationException } from './validation.exception';\r\n\r\n@Catch(ValidationException)\r\nexport class ValidationFilter implements ExceptionFilter {\r\n  catch(exception: ValidationException, host: ArgumentsHost) {\r\n    const ctx = host.switchToHttp();\r\n    const response = ctx.getResponse();\r\n\r\n    return response.status(400).json({\r\n      statusCode: 400,\r\n      timestamp: new Date().toISOString(),\r\n      errors: exception.validationErrors,\r\n    });\r\n  }\r\n}\r\n","import { Injectable, PipeTransform } from '@nestjs/common';\r\nimport { ObjectId } from 'mongodb';\r\nimport { ValidationException } from '../filters/validation.exception';\r\n\r\n@Injectable()\r\nexport class ParseObjectIdPipe implements PipeTransform<any, ObjectId> {\r\n  public transform(value: any): ObjectId {\r\n    try {\r\n      const transformedObjectId: ObjectId = ObjectId.createFromHexString(value);\r\n      return transformedObjectId;\r\n    } catch (error) {\r\n      throw new ValidationException([\r\n        `ObjectId has wrong value: ${value}, ObjectId is not valid!`,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  public static isValidObjectId(value: any): boolean {\r\n    try {\r\n      ObjectId.createFromHexString(value);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/ban-types */\r\nimport {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  Get,\r\n  HttpException,\r\n  HttpStatus,\r\n  Logger,\r\n  Param,\r\n  Post,\r\n  Put,\r\n} from '@nestjs/common';\r\nimport { Public } from '../auth/auth.module';\r\nimport { ParseObjectIdPipe } from '../shared/pipes/ParseObjectIdPipe';\r\nimport { TagDto } from './tag.dto';\r\nimport { Tag } from './tag.schema';\r\nimport { TagService } from './tag.service';\r\n\r\n@Controller('tags')\r\nexport class TagController {\r\n  // Inject all dependencies\r\n  constructor(private readonly tagService: TagService) {}\r\n\r\n  // Get all tags from organization\r\n  @Public()\r\n  @Get('organizations/:organizationId')\r\n  async getAllTagsByOrganization(\r\n    @Param('organizationId', ParseObjectIdPipe) organizationId: string\r\n  ): Promise<Tag[]> {\r\n    Logger.log('Retrieving all tags by organization (READ)');\r\n\r\n    return await this.tagService.getAllByOrganization(organizationId);\r\n  }\r\n\r\n  // Get tag by id\r\n  @Public()\r\n  @Get(':tagId')\r\n  async getTagById(\r\n    @Param('tagId', ParseObjectIdPipe) tagId: string\r\n  ): Promise<Tag> {\r\n    try {\r\n      Logger.log(`Retrieve tag with id: ${tagId} (READ)`);\r\n\r\n      return await this.tagService.getById(tagId);\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  // Create new event tag\r\n  @Public()\r\n  @Post('new/organizations/:organizationId/events/:eventId')\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  async createTagInEvent(\r\n    @Param('organizationId', ParseObjectIdPipe) organizationId: string,\r\n    @Param('eventId', ParseObjectIdPipe) eventId: string,\r\n    @Body() tagDto: TagDto\r\n  ): Promise<Object> {\r\n    try {\r\n      Logger.log(`Create tag (POST)`);\r\n\r\n      await this.tagService.createInEvent(organizationId, eventId, tagDto);\r\n\r\n      return {\r\n        status: 201,\r\n        message: 'De tag is succesvol aangemaakt!',\r\n      };\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  // Create new organization tag\r\n  @Public()\r\n  @Post('new/organizations/:organizationId')\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  async createTagInOrganization(\r\n    @Param('organizationId', ParseObjectIdPipe) organizationId: string,\r\n    @Body() tagDto: TagDto\r\n  ): Promise<Object> {\r\n    try {\r\n      Logger.log(`Create tag (POST)`);\r\n      const tag = await this.tagService.createInOrganization(\r\n        organizationId,\r\n        tagDto\r\n      );\r\n\r\n      return {\r\n        status: 201,\r\n        message: 'De tag is succesvol aangemaakt!',\r\n      };\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_FOUND);\r\n    }\r\n  }\r\n\r\n  // Update tag\r\n  @Public()\r\n  @Put(':tagId')\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  async updateTag(\r\n    @Param('tagId', ParseObjectIdPipe) tagId: string,\r\n    @Body() tagDto: TagDto\r\n  ): Promise<Object> {\r\n    try {\r\n      Logger.log(`Update tag ${tagId} (PUT)`);\r\n\r\n      const tag = await this.tagService.update(tagId, tagDto);\r\n\r\n      return {\r\n        status: 200,\r\n        message: 'De tag is succesvol aangepast!',\r\n      };\r\n    } catch (error) {\r\n      throw new HttpException(error.message, HttpStatus.NOT_MODIFIED);\r\n    }\r\n  }\r\n}\r\n","import { ITag } from '@roots/data'\r\nimport { IsDefined, IsNotEmpty, IsString, MaxLength } from 'class-validator';\r\n\r\n\r\nexport class TagDto implements ITag {\r\n    @IsNotEmpty({message: 'Naam is verplicht!'})\r\n    @IsDefined({message: 'Naam is verplicht!'})\r\n    @MaxLength(15, {message: 'Naam is te lang!'})\r\n    @IsString({message: 'Name moet van het type string zijn!'})\r\n    name: string;\r\n}","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { EventSchema } from '../event/event.schema';\r\nimport {\r\n  Organization,\r\n  OrganizationSchema,\r\n} from '../organization/organization.schema';\r\nimport { TagController } from './tag.controller';\r\nimport { Tag, TagSchema } from './tag.schema';\r\nimport { TagService } from './tag.service';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([{ name: Tag.name, schema: TagSchema }]),\r\n    MongooseModule.forFeature([{ name: Organization.name, schema: OrganizationSchema }]),\r\n    MongooseModule.forFeature([{ name: Event.name, schema: EventSchema }])\r\n  ],\r\n  providers: [TagService],\r\n  controllers: [TagController],\r\n  exports: [MongooseModule, TagService],\r\n})\r\nexport class TagModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { ITag } from '@roots/data';\r\nimport { Types } from 'mongoose';\r\n\r\nexport type TagDocument = Tag & Document;\r\n\r\n@Schema()\r\nexport class Tag implements ITag {\r\n  @Prop({\r\n    required:true\r\n  })\r\n  name: string;\r\n\r\n  @Prop({\r\n    type: Types.ObjectId, required:true\r\n  })\r\n  organization: Types.ObjectId\r\n}\r\n\r\nexport const TagSchema = SchemaFactory.createForClass(Tag);","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model, Types } from 'mongoose';\r\nimport {\r\n  Organization,\r\n  OrganizationDocument,\r\n} from '../organization/organization.schema';\r\nimport { TagDto } from './tag.dto';\r\nimport { Tag, TagDocument } from './tag.schema';\r\nimport { Event, EventDocument } from '../event/event.schema';\r\n\r\n@Injectable()\r\nexport class TagService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    @InjectModel(Tag.name)\r\n    private tagModel: Model<TagDocument>,\r\n    @InjectModel(Organization.name)\r\n    private organizationModel: Model<OrganizationDocument>,\r\n    @InjectModel(Event.name)\r\n    private eventModel: Model<EventDocument>\r\n  ) {}\r\n\r\n  // Get all tags from organization\r\n  async getAllByOrganization(organizationId: string): Promise<Tag[]> {\r\n    const organizationTagIds = await this.organizationModel.findOne(\r\n      { _id: new Types.ObjectId(organizationId) },\r\n      { tags: 1 }\r\n    );\r\n    if (!organizationTagIds)\r\n      throw new HttpException(\r\n        'Organisatie niet gevonden',\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    // eslint-disable-next-line prefer-const\r\n    let tags = [];\r\n    for await (const tagId of organizationTagIds.tags) {\r\n      const tag = await this.tagModel.findOne({\r\n        _id: new Types.ObjectId(tagId),\r\n      });\r\n\r\n      tags.push({\r\n        _id: tag._id,\r\n        name: tag.name,\r\n        organisation: tag.organization,\r\n      });\r\n    }\r\n\r\n    return tags;\r\n  }\r\n\r\n  // Get tag by ID\r\n  async getById(tagId: string): Promise<Tag> {\r\n    const tag = await this.tagModel.findOne({ _id: new Types.ObjectId(tagId) });\r\n\r\n    if (!tag)\r\n      throw new HttpException('Tag niet gevonden', HttpStatus.NOT_FOUND);\r\n\r\n    return tag;\r\n  }\r\n\r\n  // Create event tag\r\n  async createInEvent(\r\n    organizationId: string,\r\n    eventId: string,\r\n    tagDto: TagDto\r\n  ): Promise<Tag> {\r\n    // validation\r\n    const organization = await this.organizationModel.findOne({\r\n      _id: new Types.ObjectId(organizationId),\r\n    });\r\n    if (!organization)\r\n      throw new HttpException(\r\n        'Organisatie niet gevonden',\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const event = (await organization).events\r\n      .filter((p) =>\r\n        new Types.ObjectId((p as any)._id).equals(new Types.ObjectId(eventId))\r\n      )\r\n      .at(0);\r\n    if (!event)\r\n      throw new HttpException(\r\n        `Event niet gevonden van organisatie met id: ${organizationId}`,\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    // new tag\r\n    const newTag = new this.tagModel({\r\n      ...tagDto,\r\n      organization: new Types.ObjectId(organizationId),\r\n    });\r\n\r\n    // create new tag in collection\r\n    const tag = await this.tagModel.create(newTag);\r\n    if (!tag)\r\n      throw new HttpException(\r\n        'Kan geen nieuwe tag aanmaken',\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n\r\n    // push to organization\r\n    await this.organizationModel.updateOne(\r\n      { _id: new Types.ObjectId(organizationId) },\r\n      {\r\n        $push: { tags: new Types.ObjectId(tag._id) },\r\n      },\r\n      {\r\n        new: true,\r\n      }\r\n    );\r\n\r\n    // push to event\r\n    await this.eventModel.updateOne(\r\n      {\r\n        _id: new Types.ObjectId(eventId),\r\n      },\r\n      { $push: { tags: new Types.ObjectId(tag._id) } },\r\n      { new: true }\r\n    );\r\n\r\n    return tag;\r\n  }\r\n\r\n  // Create organization tag\r\n  async createInOrganization(\r\n    organizationId: string,\r\n    tagDto: TagDto\r\n  ): Promise<Tag> {\r\n    // validation\r\n    const organization = this.organizationModel.findOne({\r\n      _id: new Types.ObjectId(organizationId),\r\n    });\r\n    if (!organization)\r\n      throw new HttpException(\r\n        'Organisatie niet gevonden',\r\n        HttpStatus.NOT_FOUND\r\n      );\r\n\r\n    // new tag\r\n    const newTag = new this.tagModel({\r\n      ...tagDto,\r\n      organization: new Types.ObjectId(organizationId),\r\n    });\r\n\r\n    // create new tag in collection\r\n    const tag = await this.tagModel.create(newTag);\r\n    if (!tag)\r\n      throw new HttpException(\r\n        'Kan geen nieuwe tag aanmaken',\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n\r\n    // push to organization\r\n    await this.organizationModel.updateOne(\r\n      { _id: new Types.ObjectId(organizationId) },\r\n      {\r\n        $push: { tags: new Types.ObjectId(tag._id) },\r\n      },\r\n      {\r\n        new: true,\r\n      }\r\n    );\r\n\r\n    return tag;\r\n  }\r\n\r\n  // Update tag\r\n  async update(tagId: string, tagDto: TagDto): Promise<Tag> {\r\n    const updatedTag = await this.tagModel.findOneAndUpdate(\r\n      { _id: new Types.ObjectId(tagId) },\r\n      {\r\n        $set: {\r\n          name: tagDto?.name,\r\n        },\r\n      },\r\n      {\r\n        new: true,\r\n        runValidators: true,\r\n      }\r\n    );\r\n\r\n    if (!updatedTag) {\r\n      throw new HttpException('Deze tag bestaat niet', HttpStatus.NOT_FOUND);\r\n    }\r\n\r\n    return updatedTag;\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { Token, TokenSchema } from './token.schema';\r\nimport { TokenService } from './token.service';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([{ name: Token.name, schema: TokenSchema }]),\r\n  ],\r\n  providers: [TokenService],\r\n  exports: [MongooseModule, TokenService],\r\n})\r\nexport class TokenModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { IToken } from '@roots/data';\r\nimport { Types } from 'mongoose';\r\n\r\nexport type TokenDocument = Token & Document;\r\n\r\n@Schema()\r\nexport class Token implements IToken {\r\n  _id: Types.ObjectId;\r\n\r\n  @Prop({\r\n    required: true,\r\n  })\r\n  type: string;\r\n\r\n  @Prop()\r\n  verificationCode: string;\r\n\r\n  @Prop({\r\n    required: true,\r\n  })\r\n  expirationDate: Date;\r\n\r\n  @Prop({\r\n    ref: 'User',\r\n    type: Types.ObjectId,\r\n  })\r\n  userId: Types.ObjectId;\r\n}\r\n\r\nexport const TokenSchema = SchemaFactory.createForClass(Token);\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { Model } from 'mongoose';\r\nimport { Token, TokenDocument } from './token.schema';\r\n\r\n@Injectable()\r\nexport class TokenService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    @InjectModel(Token.name) private tokenModel: Model<TokenDocument>\r\n  ) {}\r\n\r\n  // Get token by ID\r\n  async getById(id: string): Promise<Token> {\r\n    const token = await this.tokenModel.findOne({ _id: id });\r\n\r\n    if (!token)\r\n      throw new HttpException('Token bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return token;\r\n  }\r\n\r\n  // get user by ID from token\r\n  async getByUserId(userId: string, type: string): Promise<Token> {\r\n    const token = await this.tokenModel.findOne({ userId, type });\r\n\r\n    if (!token)\r\n      throw new HttpException('Token bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return token;\r\n  }\r\n\r\n  // Create new token\r\n  async create(type: string, userId: string): Promise<Token> {\r\n    const newToken: any = {\r\n      type: type,\r\n      expirationDate: new Date(Date.now() + 3600 * 1000 * 24),\r\n      userId: userId,\r\n    };\r\n\r\n    type === 'verification'\r\n      ? (newToken.verificationCode = Math.floor(\r\n          100000 + Math.random() * 900000\r\n        ))\r\n      : (newToken.verificationCode = '');\r\n\r\n    return await this.tokenModel.create(newToken);\r\n  }\r\n\r\n  // Delete token\r\n  async delete(userId: string, type: string) {\r\n    return this.tokenModel.deleteMany({ userId, type });\r\n  }\r\n}\r\n","import {\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  Logger,\r\n  Param,\r\n  Post,\r\n  Req,\r\n} from '@nestjs/common';\r\nimport { Public } from '../auth/auth.module';\r\nimport { ParseObjectIdPipe } from '../shared/pipes/ParseObjectIdPipe';\r\nimport { UserDto } from './user.dto';\r\nimport { User } from './user.schema';\r\nimport { UserService } from './user.service';\r\n\r\n@Controller()\r\nexport class UserController {\r\n  // Inject all dependencies\r\n  constructor(private readonly userService: UserService) {}\r\n\r\n  // Get all participants from organization\r\n  @Public()\r\n  @Get('organizations/:id/participants')\r\n  async getParticipants(\r\n    @Param('id', ParseObjectIdPipe) id: string\r\n  ): Promise<User[]> {\r\n    Logger.log(`Retrieve participants (READ)`);\r\n\r\n    return await this.userService.getAllParticipants(id);\r\n  }\r\n\r\n  // Get user by id\r\n  @Public()\r\n  @Get('users/:id')\r\n  async getById(@Param('id', ParseObjectIdPipe) id: string): Promise<User> {\r\n    Logger.log(`Retrieve user with id: ${id} (READ)`);\r\n\r\n    return await this.userService.getById(id);\r\n  }\r\n\r\n  // Create new user\r\n  @Post('users/new')\r\n  async create(@Body() UserDto: UserDto): Promise<User> {\r\n    Logger.log(`Creating user (CREATE)`);\r\n\r\n    return await this.userService.create(UserDto);\r\n  }\r\n\r\n  // Get user status (activated/deactivated)\r\n  @Post('users/:id/status')\r\n  async status(\r\n    @Param('id', ParseObjectIdPipe) id: string,\r\n    @Req() req\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n  ): Promise<User> {\r\n    Logger.log(`Changing isActive status of user with an id of ${id} (POST)`);\r\n\r\n    return await this.userService.status(id, req);\r\n  }\r\n}\r\n","import { IsDefined, IsEmail, IsString, Matches } from 'class-validator';\r\n\r\nexport class UserDto {\r\n  @IsString({ message: 'Voornaam moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Voornaam is verplicht!' })\r\n  firstname: string;\r\n\r\n  @IsString({ message: 'Achternaam moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Achternaam is verplicht!' })\r\n  lastname: string;\r\n\r\n  @IsEmail()\r\n  @IsString({ message: 'E-mailadres moet van het type string zijn!!' })\r\n  @IsDefined({ message: 'E-mailadres is verplicht!' })\r\n  emailAddress: string;\r\n\r\n  @IsString({ message: 'Wachtwoord moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Wachtwoord is verplicht!' })\r\n  @Matches(new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)[a-zA-Z\\\\d]{8,}$'), {\r\n    message:\r\n      'Het wachtwoord is niet sterk genoeg! Het moet op zijn minst bestaan uit: 8 karakters, 1 hoofdletter, 1 kleine letter and 1 getal!',\r\n  })\r\n  password: string;\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { OrganizationModule } from '../organization/organization.module';\r\nimport { UserController } from './user.controller';\r\nimport { User, UserSchema } from './user.schema';\r\nimport { UserService } from './user.service';\r\n\r\n@Module({\r\n  imports: [\r\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]), OrganizationModule\r\n  ],\r\n  controllers: [UserController],\r\n  providers: [UserService],\r\n  exports: [UserService],\r\n})\r\nexport class UserModule {}\r\n","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { IUser } from '@roots/data';\r\nimport {\r\n  IsDefined,\r\n  isEmail,\r\n  IsEmail,\r\n  IsString,\r\n  Matches,\r\n} from 'class-validator';\r\nimport { Types } from 'mongoose';\r\n\r\nexport type UserDocument = User & Document;\r\n\r\n@Schema()\r\nexport class User implements IUser {\r\n  _id: Types.ObjectId;\r\n\r\n  @Prop({\r\n    required: true,\r\n  })\r\n  @IsString({ message: 'Voornaam moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Voornaam is verplicht!' })\r\n  firstname: string;\r\n\r\n  @Prop({\r\n    required: true,\r\n  })\r\n  @IsString({ message: 'Achternaam moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Achternaam is verplicht!' })\r\n  lastname: string;\r\n\r\n  @IsEmail()\r\n  @IsString({ message: 'E-mailadres moet van het type string zijn!' })\r\n  @IsDefined({ message: 'E-mailadres is verplicht!' })\r\n  @Prop({\r\n    required: true,\r\n    unique: true,\r\n    validate: isEmail,\r\n  })\r\n  emailAddress: string;\r\n\r\n  @Prop({\r\n    required: true,\r\n  })\r\n  @IsString({ message: 'Wachtwoord moet van het type string zijn!' })\r\n  @IsDefined({ message: 'Wachtwoord is verplicht!' })\r\n  @Matches(new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)[a-zA-Z\\\\d]{8,}$'), {\r\n    message:\r\n      'Het wachtwoord is niet sterk genoeg! Het moet op zijn minst bestaan uit: 8 karakters, 1 hoofdletter, 1 kleine letter and 1 getal!',\r\n  })\r\n  password: string;\r\n\r\n  @Prop()\r\n  isActive: boolean;\r\n\r\n  @Prop()\r\n  isVerified: boolean;\r\n\r\n  @Prop()\r\n  createdAt: Date;\r\n\r\n  @Prop()\r\n  lastLoginTimestamp: Date;\r\n\r\n  @Prop({\r\n    ref: 'Organization',\r\n    type: Types.ObjectId,\r\n  })\r\n  organization: Types.ObjectId;\r\n}\r\n\r\nexport const UserSchema = SchemaFactory.createForClass(User);\r\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport * as bcrypt from 'bcryptjs';\r\nimport { Model } from 'mongoose';\r\nimport { OrganizationService } from '../organization/organization.service';\r\nimport { UserDto } from './user.dto';\r\nimport { User, UserDocument } from './user.schema';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  // Inject all dependencies\r\n  constructor(\r\n    @InjectModel(User.name) private userModel: Model<UserDocument>,\r\n    private readonly organizationService: OrganizationService\r\n  ) {}\r\n\r\n  // Find user by email address\r\n  async findByEmailAddress(emailAddress: string): Promise<User> {\r\n    const user = await this.userModel.findOne({ emailAddress });\r\n\r\n    if (!user)\r\n      throw new HttpException('Gebruiker bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return user;\r\n  }\r\n\r\n  // Find user by ID\r\n  async getById(_id: string): Promise<User> {\r\n    const user = await this.userModel.findOne({ _id });\r\n\r\n    if (!user)\r\n      throw new HttpException('Gebruiker bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return user;\r\n  }\r\n\r\n  // Get all participants from organization\r\n  async getAllParticipants(organizationId: string): Promise<User[]> {\r\n    return await this.userModel.find({ organization: organizationId });\r\n  }\r\n\r\n  // Create new user\r\n  async create(UserDto: UserDto): Promise<User> {\r\n    await this.validate(UserDto);\r\n\r\n    const newUser = new this.userModel({\r\n      ...UserDto,\r\n      password: await bcrypt.hashSync(UserDto.password, 10),\r\n      isActive: true,\r\n      isVerified: false,\r\n      createdAt: new Date(),\r\n      organization: await this.organizationService.getByEmailDomain(\r\n        UserDto.emailAddress.split('@').at(1)\r\n      ),\r\n    });\r\n\r\n    return await this.userModel.create(newUser);\r\n  }\r\n\r\n  // Set/Update last login timestamp\r\n  async setLastLoginTimeStamp(id: string) {\r\n    const user = await this.userModel.findOneAndUpdate({ _id: id }, [\r\n      { $set: { lastLoginTimestamp: new Date() } },\r\n    ]);\r\n\r\n    if (!user)\r\n      throw new HttpException('Gebruiker bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return user;\r\n  }\r\n\r\n  // Set/Hash password\r\n  async setPassword(userId: string, password: string) {\r\n    const encryptedPassword = await bcrypt.hashSync(password, 10);\r\n\r\n    const user = await this.userModel.findOneAndUpdate(\r\n      { _id: userId },\r\n      { password: encryptedPassword }\r\n    );\r\n\r\n    if (!user)\r\n      throw new HttpException('Gebruiker bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return user;\r\n  }\r\n\r\n  // Verify new account\r\n  async verifyAccount(userId: string) {\r\n    const user = await this.userModel.findOneAndUpdate({ _id: userId }, [\r\n      { $set: { isVerified: true } },\r\n    ]);\r\n\r\n    if (!user)\r\n      throw new HttpException('Gebruiker bestaat niet!', HttpStatus.NOT_FOUND);\r\n\r\n    return user;\r\n  }\r\n\r\n  // Change user status (activated/deactivated)\r\n  async status(id: string, req: any): Promise<User> {\r\n    const targetUser = await this.getById(id);\r\n\r\n    if (\r\n      targetUser.organization.toString() !== req.user.organization.toString()\r\n    ) {\r\n      throw new HttpException(\r\n        `Je mag alleen gebruikers van activeren/deactiveren van het bedrijf waar je werkt!`,\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n\r\n    if (id.toString() === req.user._id.toString()) {\r\n      throw new HttpException(\r\n        `Je mag jouw eigen account niet activeren/deactiveren!`,\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n\r\n    return await this.userModel.findOneAndUpdate(\r\n      { _id: id },\r\n      [{ $set: { isActive: { $not: '$isActive' } } }],\r\n      { new: true }\r\n    );\r\n  }\r\n\r\n  // Validate user\r\n  async validate(user) {\r\n    if (\r\n      (await this.userModel.find({ emailAddress: user.emailAddress })).length >\r\n      0\r\n    ) {\r\n      throw new HttpException(\r\n        `Het e-mailadres is al in gebruik!`,\r\n        HttpStatus.BAD_REQUEST\r\n      );\r\n    }\r\n  }\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  //local\r\n\r\n  API_URL: 'mongodb://127.0.0.1:27017/roots',\r\n  APPLICATION_URL: 'http://localhost:4200',\r\n\r\n  //mailing\r\n  EMAIL_HOST: 'smtp.sendgrid.net',\r\n  EMAIL_USERNAME: 'apikey',\r\n  EMAIL_API_KEY:\r\n    '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',\r\n  EMAIL_SENDINGEMAIL: 'roots.team.noreply@gmail.com',\r\n};\r\n","export * from './lib/data';\r\n","import { Types } from 'mongoose';\r\n\r\n//INTERFACES\r\nexport interface IUser {\r\n  firstname: string;\r\n  lastname: string;\r\n  emailAddress: string;\r\n  password: string;\r\n  isActive: boolean;\r\n  organization: Types.ObjectId;\r\n}\r\n\r\nexport interface IOrganization {\r\n  name: string;\r\n  emailDomain: string;\r\n  events: Types.ObjectId[];\r\n  logs: ILog[];\r\n}\r\n\r\nexport interface IEvent {\r\n  title: string;\r\n  description: string;\r\n  content: string;\r\n  eventDate: Date;\r\n  isActive: boolean;\r\n}\r\n\r\nexport interface ITag {\r\n  name: string;\r\n}\r\n\r\nexport interface IToken {\r\n  type: string;\r\n  expirationDate: Date;\r\n}\r\n\r\n\r\nexport interface ILog{\r\n  editor: string;\r\n  action: string;\r\n  object: string;\r\n  logStamp: Date;\r\n}\r\n\r\nexport interface UserData {\r\n  initials:string;\r\n  firstname:string;\r\n  lastname:string;\r\n  emailAddress:string;\r\n  createdAt:Date;\r\n  lastLoginTimestamp: Date;\r\n  isActive: boolean;\r\n}\r\n\r\n\r\n// CLASSES\r\nexport class User implements IUser {\r\n  _id = new Types.ObjectId();\r\n  firstname = '';\r\n  lastname = '';\r\n  emailAddress = '';\r\n  password = '';\r\n  access_token = '';\r\n  organization = new Types.ObjectId();\r\n  initials = '';\r\n  isActive = true;\r\n  isVerified = true;\r\n}\r\n\r\nexport class Organization implements IOrganization {\r\n  _id = new Types.ObjectId();\r\n  name = '';\r\n  emailDomain = '';\r\n  events = [] as Types.ObjectId[];\r\n  tags = [] as Types.ObjectId[];\r\n  logs = [] as ILog[]\r\n}\r\n\r\nexport class Event implements IEvent {\r\n  title = '';\r\n  description = '';\r\n  content = '';\r\n  eventDate = new Date();\r\n  _id = new Types.ObjectId();\r\n  tags = [] as Types.ObjectId[];\r\n  isActive = true;\r\n}\r\n\r\nexport class Tag implements ITag {\r\n  _id = new Types.ObjectId();\r\n  name = '';\r\n  organization = new Types.ObjectId();\r\n}\r\n\r\n\r\nexport class Log implements ILog {\r\n  editor = '';\r\n  action = '';\r\n  object = '';\r\n  logStamp = new Date();\r\n}","module.exports = require(\"@nestjs-modules/mailer\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"class-validator\");","module.exports = require(\"express\");","module.exports = require(\"mongodb\");","module.exports = require(\"mongoose\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger, ValidationError, ValidationPipe } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\nimport { urlencoded, json } from 'express';\r\nimport { AppModule } from './app/app.module';\r\nimport { ValidationException } from './app/shared/filters/validation.exception';\r\nimport { ValidationFilter } from './app/shared/filters/validation.filter';\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n\r\n  const globalPrefix = 'api';\r\n\r\n  app.setGlobalPrefix(globalPrefix);\r\n\r\n  app.use(json({ limit: '50mb' }));\r\n\r\n  app.use(urlencoded({ extended: true, limit: '50mb' }));\r\n\r\n  app.enableCors();\r\n\r\n  const port = process.env.PORT || 9000;\r\n\r\n  app.useGlobalFilters(new ValidationFilter());\r\n\r\n  app.useGlobalPipes(\r\n    new ValidationPipe({\r\n      skipMissingProperties: true,\r\n      exceptionFactory: (errors: ValidationError[]) => {\r\n        const messages = errors.map(\r\n          (error) =>\r\n            `${error.property} has wrong value: ${error.value}, ${Object.values(\r\n              error.constraints\r\n            ).join(', ')}`\r\n        );\r\n        return new ValidationException(messages);\r\n      },\r\n    })\r\n  );\r\n\r\n  await app.listen(port);\r\n\r\n  Logger.log(\r\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\r\n  );\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}
>>>>>>> c26c8a25bd3baeb2bc09c5d9bb59d63fb18e85b8
